{"version":3,"file":"mgt-file-upload.tests.js","sourceRoot":"src/","sources":["components/mgt-file-list/mgt-file-upload/mgt-file-upload.tests.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;;;;;;;AAEH,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AACzD,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACjE,OAAO,EAAE,aAAa,EAAE,8BAA8B,EAAE,MAAM,mBAAmB,CAAC;AAElF,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;IACvC,8BAA8B,EAAE,CAAC;IACjC,SAAS,CAAC,cAAc,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;IAElD,EAAE,CAAC,eAAe,EAAE,GAAS,EAAE;QAC7B,MAAM,aAAa,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,qCAAqC,CAAC,CAAC;QAE/E,MAAM,MAAM,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAyD9C,CAAC,CAAC;IACL,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;QAC7B,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC;YACnD,iBAAiB;YACjB,qBAAqB;YACrB,qBAAqB;SACtB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { fixture, html, expect } from '@open-wc/testing';\nimport { MockProvider, Providers } from '@microsoft/mgt-element';\nimport { MgtFileUpload, registerMgtFileUploadComponent } from './mgt-file-upload';\n\ndescribe('mgt-file-upload - tests', () => {\n  registerMgtFileUploadComponent();\n  Providers.globalProvider = new MockProvider(true);\n\n  it('should render', async () => {\n    const mgtFileUpload = await fixture(html`<mgt-file-upload></mgt-file-upload>`);\n\n    await expect(mgtFileUpload).shadowDom.to.equal(`\n    <div\n        class=\"file-upload-dialog\"\n        id=\"file-upload-dialog\">\n        <fluent-dialog\n          class=\"file-upload-dialog-content\"\n          modal=\"true\">\n          <span\n            class=\"file-upload-dialog-close\"\n            id=\"file-upload-dialog-close\">\n          </span>\n          <div class=\"file-upload-dialog-content-text\">\n            <h2 class=\"file-upload-dialog-title\"></h2>\n            <div></div>\n            <fluent-checkbox\n              aria-checked=\"false\"\n              aria-disabled=\"false\"\n              aria-required=\"false\"\n              class=\"file-upload-dialog-check\"\n              id=\"file-upload-dialog-check\"\n              role=\"checkbox\"\n              tabindex=\"0\">\n            </fluent-checkbox>\n          </div>\n          <div class=\"file-upload-dialog-editor\">\n            <fluent-button\n              appearance=\"accent\"\n              class=\"accent file-upload-dialog-ok\">\n            </fluent-button>\n            <fluent-button\n              appearance=\"outline\"\n              class=\"file-upload-dialog-cancel outline\">\n            </fluent-button>\n          </div>\n        </fluent-dialog>\n      </div>\n      <div id=\"file-upload-border\">\n      </div>\n      <div class=\"file-upload-area-button\">\n        <input\n          aria-label=\"file upload input\"\n          id=\"file-upload-input\"\n          multiple=\"\"\n          tabindex=\"-1\"\n          title=\"File upload button\"\n          type=\"file\">\n        <fluent-button\n          appearance=\"accent\"\n          class=\"accent file-upload-button\"\n          label=\"File upload button\">\n          <span slot=\"start\"></span>\n          <span class=\"upload-text\">\n            Upload Files\n          </span>\n        </fluent-button>\n      </div>\n      <div class=\"file-upload-template\"></div>\n    `);\n  });\n\n  it('has required scopes', () => {\n    expect(MgtFileUpload.requiredScopes).to.have.members([\n      'files.readwrite',\n      'files.readwrite.all',\n      'sites.readwrite.all'\n    ]);\n  });\n});\n"]}