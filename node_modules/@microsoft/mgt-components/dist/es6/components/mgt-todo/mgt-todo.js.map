{"version":3,"file":"mgt-todo.js","sourceRoot":"src/","sources":["components/mgt-todo/mgt-todo.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, nothing, TemplateResult } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { fluentCheckbox, fluentRadioGroup, fluentButton } from '@fluentui/web-components';\nimport { IGraph, mgtHtml, registerComponent, Providers, ProviderState } from '@microsoft/mgt-element';\nimport { TodoTaskList, TodoTask, TaskStatus } from '@microsoft/microsoft-graph-types';\nimport {\n  createTodoTask,\n  deleteTodoTask,\n  getTodoTaskList,\n  getTodoTaskLists,\n  getTodoTasks,\n  updateTodoTask\n} from './graph.todo';\nimport { styles } from './mgt-todo-css';\nimport { strings } from './strings';\nimport { registerMgtPickerComponent } from '../mgt-picker/mgt-picker';\nimport { MgtTasksBase } from '../mgt-tasks-base/mgt-tasks-base';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { isElementDark } from '../../utils/isDark';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\n\n/**\n * Filter function\n */\nexport type TodoFilter = (task: TodoTask) => boolean;\n\nexport const registerMgtTodoComponent = () => {\n  registerFluentComponents(fluentCheckbox, fluentRadioGroup, fluentButton);\n  registerMgtPickerComponent();\n  registerComponent('todo', MgtTodo);\n};\n\n/**\n * component enables the user to view, add, remove, complete, or edit todo tasks. It works with tasks in Microsoft Planner or Microsoft To-Do.\n *\n * @export\n * @class MgtTodo\n * @extends {MgtTasksBase}\n *\n * @cssprop --task-color - {Color} - Task text color\n * @cssprop --task-background-color - {Color} - Task background color\n * @cssprop --task-complete-background - {Color} - Task background color when completed\n * @cssprop --task-date-input-active-color - {Color} - Task date input active color\n * @cssprop --task-date-input-hover-color - {Color} - Task date input hover color\n * @cssprop --task-background-color-hover - {Color} - Task background when hovered\n * @cssprop --task-box-shadow - {Color} - Task box shadow color\n * @cssprop --task-border-completed - {Color} - Task border color when completed\n * @cssprop --task-radio-background-color - {Color} - Task radio background color\n */\nexport class MgtTodo extends MgtTasksBase {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  public static get styles() {\n    return styles;\n  }\n  /**\n   * Strings for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtTodo\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Optional filter function when rendering tasks\n   *\n   * @type {TodoFilter}\n   * @memberof MgtTodo\n   */\n  public taskFilter: TodoFilter;\n\n  /**\n   * Get the scopes required for todo\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtTodo\n   */\n  public static get requiredScopes(): string[] {\n    return ['tasks.read', 'tasks.readwrite'];\n  }\n  @state() private _tasks: TodoTask[];\n  @state() private _taskBeingUpdated: TodoTask;\n  @state() private _updatingTaskDate: boolean;\n  @state() private _isChangedDueDate = false;\n\n  @state() private _newTaskDueDate: Date;\n  @state() private _newTaskName: string;\n  @state() private _changedTaskName: string;\n  @state() private _isNewTaskBeingAdded: boolean;\n  @state() private _graph: IGraph;\n  @state() private currentList: TodoTaskList;\n  @state() private _isDarkMode = false;\n\n  constructor() {\n    super();\n    this._graph = null;\n    this._newTaskDueDate = null;\n    this._tasks = [];\n    this.addEventListener('selectionChanged', this.handleSelectionChanged);\n    this.addEventListener('blur', this.handleBlur);\n  }\n\n  /**\n   * updates provider state\n   *\n   * @memberof MgtTodo\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('darkmodechanged', this.onThemeChanged);\n    // invoked to ensure we have the correct initial value for _isDarkMode\n    this.onThemeChanged();\n  }\n\n  /**\n   * removes updates on provider state\n   *\n   * @memberof MgtTodo\n   */\n  public disconnectedCallback() {\n    window.removeEventListener('darkmodechanged', this.onThemeChanged);\n    super.disconnectedCallback();\n  }\n\n  private readonly onThemeChanged = () => {\n    this._isDarkMode = isElementDark(this);\n  };\n\n  /**\n   * Render the list of todo tasks\n   */\n  protected renderTasks(): TemplateResult {\n    let tasks = this._tasks;\n    if (tasks && this.taskFilter) {\n      tasks = tasks.filter(task => this.taskFilter(task));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const completedTasks = tasks.filter(task => task.status === 'completed');\n\n    const taskTemplates = repeat(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      tasks.filter(task => task.status !== 'completed'),\n      task => task.id,\n      task => this.renderTask(task)\n    );\n\n    const completedTaskTemplates = repeat(\n      completedTasks\n        .sort((a, b) => {\n          return a.lastModifiedDateTime < b.lastModifiedDateTime ? -1 : 1;\n        })\n        .filter(task => task.status === 'completed'),\n      task => task.id,\n      task => this.renderTask(task)\n    );\n    return html`\n      ${taskTemplates}\n      ${completedTaskTemplates}\n    `;\n  }\n\n  /**\n   * Render the generic picker or the task list displayName.\n   *\n   */\n  protected renderPicker() {\n    if (this.targetId) {\n      return html`<p>${this.currentList?.displayName}</p>`;\n    } else {\n      return mgtHtml`\n        <mgt-picker\n          resource=\"me/todo/lists\"\n          scopes=\"tasks.read, tasks.readwrite\"\n          key-name=\"displayName\"\n          selected-value=\"${ifDefined(this.currentList?.displayName)}\"\n          placeholder=\"Select a task list\">\n        </mgt-picker>`;\n    }\n  }\n\n  /**\n   * Render the panel for creating a new task\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n  protected renderNewTask = (): TemplateResult => {\n    const addIcon = this._newTaskName\n      ? html`\n        <fluent-checkbox\n          class=\"task-add-icon\"\n          @click=\"${this.addTask}\">\n        </fluent-checkbox>\n      `\n      : html`\n        <span class=\"add-icon\">${getSvg(SvgIcon.Add)}</span>\n      `;\n\n    const cancelIcon = html`\n      <fluent-button\n        aria-label=${this.strings.cancelAddingTask}\n        class=\"task-cancel-icon\" \n        @click=\"${this.clearNewTaskData}\"\n      >\n        ${getSvg(SvgIcon.Cancel)}\n      </fluent-button>\n    `;\n    const dateClass = { dark: this._isDarkMode, date: true };\n    const calendarTemplate = html`\n      <fluent-text-field\n        autocomplete=\"off\"\n        type=\"date\"\n        id=\"new-taskDate-input\"\n        class=\"${classMap(dateClass)}\"\n        aria-label=\"${this.strings.newTaskDateInputLabel}\"\n        .value=\"${this.dateToInputValue(this._newTaskDueDate)}\"\n        @change=\"${this.handleDateChange}\"\n      >\n      </fluent-text-field>\n    `;\n\n    const newTaskDetails = this.readOnly\n      ? nothing\n      : html`\n      <fluent-text-field\n        autocomplete=\"off\"\n        appearance=\"outline\"\n        class=\"new-task\"\n        id=\"new-task-name-input\"\n        aria-label=\"${this.strings.newTaskLabel}\"\n        .value=${this._newTaskName}\n        placeholder=\"${this.strings.newTaskPlaceholder}\"\n        @keydown=\"${this.handleKeyDown}\"\n        @input=\"${this.handleInput}\"\n      >\n        <div slot=\"start\" class=\"start\">${addIcon}</div>\n        ${\n          this._newTaskName\n            ? html`\n              <div slot=\"end\" class=\"end\">\n                <span class=\"calendar\">${calendarTemplate}</span>\n                ${cancelIcon}\n              </div> `\n            : html``\n        }\n      </fluent-text-field>\n    `;\n    return html`\n      ${\n        this.currentList\n          ? html`\n            <div dir=${this.direction} class=\"task new-task incomplete\">\n              ${newTaskDetails}\n            </div>\n        `\n          : html``\n      }  \n     `;\n  };\n\n  /**\n   * Handle a change in taskList.\n   *\n   * @protected\n   * @param {CustomEvent} e\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n\n  protected handleSelectionChanged = (e: CustomEvent<TodoTaskList>) => {\n    this.currentList = e.detail;\n    void this.loadTasks(this.currentList);\n  };\n\n  /**\n   * Render task details.\n   *\n   * @protected\n   * @param {TodoTask} task\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n  protected renderTaskDetails = (task: TodoTask) => {\n    const context = { task, list: this.currentList };\n\n    if (this.hasTemplate('task')) {\n      return this.renderTemplate('task', context, task.id);\n    }\n\n    let taskDetailsTemplate = null;\n\n    const taskDeleteTemplate = html`\n      <fluent-button class=\"task-delete\"\n        @click=\"${() => this.removeTask(task.id)}\"\n        aria-label=\"${this.strings.deleteTaskOption}\">\n        ${getSvg(SvgIcon.Delete)}\n      </fluent-button>`;\n\n    if (this.hasTemplate('task-details')) {\n      taskDetailsTemplate = this.renderTemplate('task-details', context, `task-details-${task.id}`);\n    } else {\n      const dateClass = { dark: this._isDarkMode, date: true, 'task-due': true };\n      const calendarTemplate = html`\n        <fluent-text-field\n          autocomplete=\"off\"\n          type=\"date\"\n          id=\"${task.id}-taskDate-input\"\n          class=\"${classMap(dateClass)}\"\n          aria-label=\"${this.strings.changeTaskDateInputLabel}\"\n          .value=\"${\n            task.dueDateTime\n              ? this.dateToInputValue(new Date(task.dueDateTime.dateTime))\n              : this._taskBeingUpdated === task\n                ? this.dateToInputValue(this._newTaskDueDate)\n                : nothing\n          }\"\n          @change=\"${this.handleDateUpdate}\"\n          @focus=\"${(e: KeyboardEvent) => this.updatingTask(e, task)}\"\n          @blur=\"${this.handleBlur}\"\n        >\n        </fluent-text-field>\n      `;\n      const changeTaskDetailsTemplate = html`\n          <fluent-text-field \n            autocomplete=\"off\"\n            appearance=\"outline\"\n            class=\"title\"\n            id=${task.id}\n            .value=\"${task.title ? task.title : this._taskBeingUpdated === task ? this._changedTaskName : ''}\"\n            aria-label=\"${this.strings.editTaskLabel}\"\n            @keydown=\"${(e: KeyboardEvent) => this.handleChange(e, task)}\"\n            @input=\"${(e: KeyboardEvent) => this.handleChange(e, task)}\"\n            @focus=\"${(e: KeyboardEvent) => this.updatingTask(e, task)}\"\n          >\n          </fluent-text-field>\n          ${task.dueDateTime || this._taskBeingUpdated === task ? html`${calendarTemplate}` : nothing}\n          ${taskDeleteTemplate}\n      `;\n\n      taskDetailsTemplate = html`\n      <div class=\"task-details\">\n        ${changeTaskDetailsTemplate}\n      </div>\n      `;\n    }\n\n    return html`${taskDetailsTemplate}`;\n  };\n\n  /**\n   * Render a task in the list.\n   *\n   * @protected\n   * @param {TodoTask} task\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n  protected renderTask = (task: TodoTask) => {\n    const isCompleted = task.status === 'completed';\n\n    const taskClasses = classMap({\n      complete: isCompleted,\n      'read-only': this.readOnly,\n      task: true\n    });\n\n    const checkboxClasses = classMap({\n      complete: isCompleted\n    });\n\n    const taskCheckContent = html`${getSvg(SvgIcon.CheckMark)}`;\n\n    return html`\n      <div class=${taskClasses} @blur=\"${this.handleBlur}\">\n        <fluent-checkbox \n          id=${task.id} \n          class=${checkboxClasses}\n          ?checked=${isCompleted}\n          @click=\"${() => this.handleTaskCheckClick(task)}\"\n          @keydown=\"${(e: KeyboardEvent) => this.handleTaskCheckKeydown(e, task)}\"\n        >\n          <div slot=\"checked-indicator\">\n            ${taskCheckContent}\n          </div>\n        </fluent-checkbox>\n        ${this.renderTaskDetails(task)}\n      </div>\n    `;\n  };\n\n  /**\n   * loads tasks from dataSource\n   *\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected loadState = async (): Promise<void> => {\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    if (!this._graph) {\n      const graph = provider.graph.forComponent(this);\n      this._graph = graph;\n    }\n\n    if (!this.currentList && !this.initialId) {\n      const lists = await getTodoTaskLists(this._graph);\n      const defaultList = lists?.find(l => l.wellknownListName === 'defaultList');\n      if (defaultList) await this.loadTasks(defaultList);\n    }\n\n    if (this.targetId) {\n      // Call to get the displayName of the list\n      this.currentList = await getTodoTaskList(this._graph, this.targetId);\n      this._tasks = await getTodoTasks(this._graph, this.targetId);\n    } else if (this.initialId) {\n      // Call to get the displayName of the list\n      this.currentList = await getTodoTaskList(this._graph, this.initialId);\n      this._tasks = await getTodoTasks(this._graph, this.initialId);\n    }\n  };\n\n  /**\n   * Send a request the Graph to create a new todo task item\n   *\n   * @protected\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected async createNewTask(): Promise<void> {\n    const listId = this.currentList.id;\n    const taskData = {\n      title: this._newTaskName\n    };\n\n    if (this._newTaskDueDate) {\n      // eslint-disable-next-line @typescript-eslint/dot-notation\n      taskData['dueDateTime'] = {\n        dateTime: new Date(this._newTaskDueDate).toLocaleDateString(),\n        timeZone: 'UTC'\n      };\n    }\n\n    const task = await createTodoTask(this._graph, listId, taskData);\n    this._tasks.unshift(task);\n  }\n\n  /**\n   * Create a new todo task and add it to the list\n   *\n   * @protected\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected addTask = async (): Promise<void> => {\n    if (this._isNewTaskBeingAdded || !this._newTaskName) {\n      return;\n    }\n\n    this._isNewTaskBeingAdded = true;\n\n    try {\n      await this.createNewTask();\n    } finally {\n      this.clearNewTaskData();\n      this._isNewTaskBeingAdded = false;\n    }\n  };\n\n  /**\n   *Update a todo task in the todo list\n   * @protected\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected updateTask = async (task: TodoTask): Promise<void> => {\n    try {\n      if (!this._changedTaskName && !this._isChangedDueDate) {\n        return;\n      }\n      await this.updateTaskItem(task);\n    } finally {\n      this.clearNewTaskData();\n    }\n  };\n\n  /**\n   * Send a request the Graph to update a todo task item\n   *\n   * @protected\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected async updateTaskItem(task: TodoTask): Promise<void> {\n    const listId = this.currentList.id;\n    let taskData: TodoTask = {};\n\n    if (this._changedTaskName && this._changedTaskName !== task.title) {\n      taskData = {\n        title: this._changedTaskName\n      };\n    }\n\n    if (this._updatingTaskDate) {\n      if (!this._isChangedDueDate) {\n        return;\n      }\n      if (this._newTaskDueDate) {\n        taskData.dueDateTime = {\n          dateTime: new Date(this._newTaskDueDate).toLocaleDateString(),\n          timeZone: 'UTC'\n        };\n      } else if (this._isChangedDueDate && !this._newTaskDueDate) {\n        taskData.dueDateTime = null;\n      } else {\n        taskData.dueDateTime = null;\n      }\n    }\n\n    if (!Object.keys(taskData).length) {\n      return;\n    }\n    const updatedTask = await updateTodoTask(this._graph, listId, task.id, taskData);\n    const taskIndex = this._tasks.findIndex(t => t.id === updatedTask.id);\n    this._tasks[taskIndex] = updatedTask;\n  }\n\n  /**\n   * Clear out the new task metadata input fields\n   *\n   * @protected\n   * @memberof MgtTodo\n   */\n  protected clearNewTaskData = (): void => {\n    this._newTaskDueDate = null;\n    this._newTaskName = '';\n    this._changedTaskName = '';\n    this._isChangedDueDate = false;\n    this.focusOnTaskInput();\n  };\n\n  protected focusOnTaskInput = (): void => {\n    const taskInputWrapper = this.renderRoot.querySelector<HTMLInputElement>('#new-task-name-input');\n    const input = taskInputWrapper?.shadowRoot.querySelector<HTMLInputElement>('input');\n    if (input) {\n      input.focus();\n    }\n  };\n\n  /**\n   * Clear the state of the component\n   *\n   * @protected\n   * @memberof MgtTodo\n   */\n  protected clearState = (): void => {\n    super.clearState();\n    this.currentList = null;\n    this._tasks = [];\n    this._taskBeingUpdated = null;\n  };\n\n  private readonly loadTasks = async (list: TodoTaskList): Promise<void> => {\n    this.currentList = list;\n\n    this._tasks = await getTodoTasks(this._graph, list.id);\n  };\n\n  private readonly updateTaskStatus = async (task: TodoTask, taskStatus: TaskStatus): Promise<void> => {\n    // Change the task status\n    task.status = taskStatus;\n\n    // Send update request\n    const listId = this.currentList.id;\n    task = await updateTodoTask(this._graph, listId, task.id, task);\n\n    const taskIndex = this._tasks.findIndex(t => t.id === task.id);\n    this._tasks[taskIndex] = task;\n    await this._task.run();\n  };\n\n  private readonly removeTask = async (taskId: string): Promise<void> => {\n    this._tasks = this._tasks.filter(t => t.id !== taskId);\n    this.requestUpdate();\n\n    const listId = this.currentList.id;\n    await deleteTodoTask(this._graph, listId, taskId);\n\n    this._tasks = this._tasks.filter(t => t.id !== taskId);\n  };\n\n  private handleTaskCheckClick(task: TodoTask) {\n    this.handleTaskClick(task);\n    if (!this.readOnly) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (task.status === 'completed') {\n        void this.updateTaskStatus(task, 'notStarted');\n      } else {\n        void this.updateTaskStatus(task, 'completed');\n      }\n    }\n  }\n\n  private handleTaskCheckKeydown(e: KeyboardEvent, task: TodoTask) {\n    if (e.key === 'Enter' && !this.readOnly) {\n      this.handleTaskClick(task);\n      if (task.status === 'completed') {\n        void this.updateTaskStatus(task, 'notStarted');\n      } else {\n        void this.updateTaskStatus(task, 'completed');\n      }\n    }\n  }\n\n  private readonly handleInput = (e: MouseEvent) => {\n    if ((e.target as HTMLInputElement).id === 'new-task-name-input') {\n      this._newTaskName = (e.target as HTMLInputElement).value;\n    }\n  };\n\n  private readonly handleChange = async (e: KeyboardEvent, task: TodoTask) => {\n    if ((e.target as HTMLInputElement).id === task.id) {\n      if (e.key === 'Enter') {\n        await this.updateTask(task);\n        (e.target as HTMLInputElement)?.blur();\n      }\n      this._changedTaskName = (e.target as HTMLInputElement).value;\n    }\n  };\n\n  private readonly handleKeyDown = async (e: KeyboardEvent) => {\n    if (e.key === 'Enter' && (e.target as HTMLInputElement).id === 'new-task-name-input') {\n      await this.addTask();\n    }\n  };\n\n  private readonly updatingTask = (e: KeyboardEvent, task: TodoTask) => {\n    if ((e.target as HTMLInputElement).id === task.id) {\n      this._taskBeingUpdated = task;\n    }\n    if ((e.target as HTMLInputElement).id === `${task.id}-taskDate-input`) {\n      this._updatingTaskDate = true;\n      this._taskBeingUpdated = task;\n    }\n  };\n\n  private readonly handleBlur = () => {\n    const task = this._taskBeingUpdated;\n    const targets = this.renderRoot.querySelectorAll('fluent-text-field');\n    for (const target of targets) {\n      if (\n        task &&\n        ((target as HTMLInputElement).id === task.id || (target as HTMLInputElement).id === `${task.id}-taskDate-input`)\n      ) {\n        void this.updateTask(task);\n        (target as HTMLElement)?.blur();\n        this._taskBeingUpdated = null;\n        this._updatingTaskDate = false;\n      }\n    }\n  };\n\n  private readonly handleDateChange = (e: Event) => {\n    const value = (e.target as HTMLInputElement).value;\n    if (value) {\n      this._newTaskDueDate = new Date(value + 'T17:00');\n    } else {\n      this._newTaskDueDate = null;\n    }\n  };\n\n  private readonly handleDateUpdate = (e: Event) => {\n    const task = this._taskBeingUpdated;\n    if (task) {\n      const value = (e.target as HTMLInputElement).value;\n      if (value) {\n        this._newTaskDueDate = new Date(value + 'T17:00');\n      } else {\n        this._newTaskDueDate = null;\n      }\n\n      if (task.dueDateTime && this._newTaskDueDate) {\n        this._isChangedDueDate = new Date(task.dueDateTime.dateTime) !== this._newTaskDueDate;\n      } else if (task.dueDateTime || this._newTaskDueDate) {\n        this._isChangedDueDate = true;\n      } else {\n        this._isChangedDueDate = false;\n      }\n    }\n  };\n}\n"]}