{"version":3,"file":"registerComponent.js","sourceRoot":"src/","sources":["utils/registerComponent.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAC;AAExE,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,OAAe,EAAE,EAAE,CAAC,GAAG,mBAAmB,CAAC,MAAM,IAAI,OAAO,EAAE,CAAC;AAElG,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,OAAe,EACf,WAAqC,EACrC,OAAkC,EAClC,EAAE;IACF,MAAM,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAC5C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC;QAAE,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;AACzF,CAAC,CAAC","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { customElementHelper } from '../components/customElementHelper';\n\nexport const buildComponentName = (tagBase: string) => `${customElementHelper.prefix}-${tagBase}`;\n\nexport const registerComponent = (\n  tagBase: string,\n  constructor: CustomElementConstructor,\n  options?: ElementDefinitionOptions\n) => {\n  const tagName = buildComponentName(tagBase);\n  if (!customElements.get(tagName)) customElements.define(tagName, constructor, options);\n};\n"]}