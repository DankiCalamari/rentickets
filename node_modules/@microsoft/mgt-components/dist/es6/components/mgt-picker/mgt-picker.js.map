{"version":3,"file":"mgt-picker.js","sourceRoot":"src/","sources":["components/mgt-picker/mgt-picker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, PropertyValueMap, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { MgtTemplatedTaskComponent, mgtHtml } from '@microsoft/mgt-element';\nimport { strings } from './strings';\nimport { fluentCombobox, fluentOption } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport '../../styles/style-helper';\nimport { Entity } from '@microsoft/microsoft-graph-types';\nimport { DataChangedDetail, registerMgtGetComponent } from '../mgt-get/mgt-get';\nimport { styles } from './mgt-picker-css';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtPickerComponent = () => {\n  registerFluentComponents(fluentCombobox, fluentOption);\n\n  registerMgtGetComponent();\n  registerComponent('picker', MgtPicker);\n};\n\n/**\n * Web component that allows a single entity pick from a generic endpoint from Graph. Is a thin wrapper over mgt-get.\n * Does not load any state itself, only received state from mgt-get via events.\n *\n * @fires {CustomEvent<any>} selectionChanged - Fired when an option is clicked/selected\n * @export\n * @class MgtPicker\n * @extends {MgtTemplatedTaskComponent}\n *\n * @cssprop --picker-background-color - {Color} Picker component background color\n * @cssprop --picker-list-max-height - {String} max height for options list. Default value is 380px.\n */\nexport class MgtPicker extends MgtTemplatedTaskComponent {\n  protected get strings() {\n    return strings;\n  }\n\n  public static get styles() {\n    return styles;\n  }\n\n  /**\n   * The resource to get\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'resource',\n    type: String\n  })\n  public resource: string;\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'version',\n    type: String\n  })\n  public version = 'v1.0';\n\n  /**\n   * Maximum number of pages to get for the resource\n   * default = 3\n   * if <= 0, all pages will be fetched\n   *\n   * @type {number}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'max-pages',\n    type: Number\n  })\n  public maxPages = 3;\n\n  /**\n   * A placeholder for the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'placeholder',\n    type: String\n  })\n  public placeholder: string;\n\n  /**\n   * Key to be rendered in the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'key-name',\n    type: String\n  })\n  public keyName: string;\n\n  /**\n   * Entity to be rendered in the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'entity-type',\n    type: String\n  })\n  public entityType: string;\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'scopes',\n    converter: value => {\n      return value ? value.toLowerCase().split(',') : null;\n    }\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Enables cache on the response from the specified resource\n   * default = false\n   *\n   * @type {boolean}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'cache-enabled',\n    type: Boolean\n  })\n  public cacheEnabled = false;\n\n  /**\n   * Invalidation period of the cache for the responses in milliseconds\n   *\n   * @type {number}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'cache-invalidation-period',\n    type: Number\n  })\n  public cacheInvalidationPeriod = 0;\n\n  /**\n   * Sets the currently selected value for the picker\n   * Must be present as an option in the supplied data returned from the the underlying graph query\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'selected-value',\n    type: String\n  })\n  public selectedValue: string;\n\n  @state() private response: Entity[];\n\n  constructor() {\n    super();\n    this.placeholder = this.strings.comboboxPlaceholder;\n    this.entityType = null;\n    this.keyName = null;\n  }\n\n  /**\n   * Refresh the data\n   *\n   * @param {boolean} [hardRefresh=false]\n   * if false (default), the component will only update if the data changed\n   * if true, the data will be first cleared and reloaded completely\n   * @memberof MgtPicker\n   */\n  public refresh(hardRefresh = false) {\n    if (hardRefresh) {\n      this.clearState();\n    }\n    void this._task.run();\n  }\n\n  /**\n   * Clears the state of the component\n   *\n   * @protected\n   * @memberof MgtPicker\n   */\n  protected clearState(): void {\n    this.response = null;\n    this.error = null;\n  }\n\n  public renderLoading = (): TemplateResult => {\n    if (!this.response) {\n      return this.renderTemplate('loading', null);\n    }\n    return this.renderContent();\n  };\n\n  /**\n   * Invoked on each update to perform rendering the picker. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  public renderContent = () => {\n    const error = this.error ? (this.error as Error) : null;\n    if (error && this.hasTemplate('error')) {\n      return this.renderTemplate('error', { error }, 'error');\n    } else if (this.hasTemplate('no-data')) {\n      return this.renderTemplate('no-data', null);\n    }\n\n    return this.response?.length > 0 ? this.renderPicker() : this.renderGet();\n  };\n\n  /**\n   * Render picker.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPicker\n   */\n  protected renderPicker(): TemplateResult {\n    return mgtHtml`\n      <fluent-combobox\n        @keydown=${this.handleComboboxKeydown}\n        current-value=${ifDefined(this.selectedValue)}\n        part=\"picker\"\n        class=\"picker\"\n        id=\"combobox\"\n        autocomplete=\"list\"\n        placeholder=${this.placeholder}>\n          ${this.response.map(\n            item => html`\n            <fluent-option value=${item.id} @click=${(e: MouseEvent) =>\n              this.handleClick(e, item)}> ${this.getNestedPropertyValue(item, this.keyName)} </fluent-option>`\n          )}\n      </fluent-combobox>\n     `;\n  }\n\n  private getNestedPropertyValue(item: Entity, keyName: string) {\n    const keys = keyName.split('.');\n    let value: Entity | object | string = item;\n\n    for (const key of keys) {\n      value = value[key] as object | string;\n\n      if (value === undefined) {\n        console.warn(`mgt-picker: Key '${key}' is undefined.`);\n        return '';\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Renders mgt-get which does a GET request to the resource.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPicker\n   */\n  protected renderGet(): TemplateResult {\n    return mgtHtml`\n      <mgt-get\n        class=\"mgt-get\"\n        resource=${this.resource}\n        version=${this.version}\n        .scopes=${this.scopes}\n        max-pages=${this.maxPages}\n        ?cache-enabled=${this.cacheEnabled}\n        ?cache-invalidation-period=${this.cacheInvalidationPeriod}>\n      </mgt-get>`;\n  }\n\n  /**\n   * When the component is first updated wire up the event listeners.\n   * @param changedProperties a map of changed properties with old values\n   */\n  protected firstUpdated(changedProperties: PropertyValueMap<unknown> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(changedProperties);\n    const parent = this.renderRoot;\n    if (parent) {\n      parent.addEventListener('dataChange', (e: CustomEvent<DataChangedDetail>): void => this.handleDataChange(e));\n    } else {\n      console.error('🦒: mgt-picker component requires a renderRoot. Something has gone horribly wrong.');\n    }\n  }\n\n  private handleDataChange(e: CustomEvent<DataChangedDetail>): void {\n    const response = e.detail.response.value;\n    const error = e.detail.error ? e.detail.error : null;\n    this.response = response;\n    this.error = error;\n  }\n\n  private handleClick(_e: MouseEvent, item: Entity) {\n    this.fireCustomEvent('selectionChanged', item, true, false, true);\n  }\n\n  /**\n   * Handles getting the fluent option item in the dropdown and fires a custom\n   * event with it when you press Enter or Backspace keys.\n   *\n   * @param {KeyboardEvent} e\n   */\n  private readonly handleComboboxKeydown = (e: KeyboardEvent) => {\n    let value: string;\n    let item: Entity;\n    const keyName: string = e.key;\n    const comboBox: HTMLElement = e.target as HTMLElement;\n    const fluentOptionEl = comboBox.querySelector('.selected');\n    if (fluentOptionEl) {\n      value = fluentOptionEl.getAttribute('value');\n    }\n\n    if ('Enter' === keyName) {\n      if (value) {\n        item = this.response.filter(res => res.id === value).pop();\n        this.fireCustomEvent('selectionChanged', item, true, false, true);\n      }\n    }\n  };\n}\n"]}