{"version":3,"file":"equals.tests.js","sourceRoot":"src/","sources":["utils/equals.tests.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/* eslint-disable @typescript-eslint/no-unused-expressions */\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { expect } from '@open-wc/testing';\nimport { equals } from './equals';\n\ndescribe('objectEquals', () => {\n  const circularObject = { a: undefined };\n  circularObject.a = circularObject;\n\n  const circularArray: unknown[] = [];\n  circularArray[0] = circularArray;\n\n  // Any other object that is not an object literal or an array will compare by reference\n  const simpleDate = new Date(0);\n\n  it('should return true', () => {\n    const testValues = [\n      [{}, {}],\n      [\n        { a: 1, b: true, c: 'foo' },\n        { c: 'foo', b: true, a: 1 }\n      ],\n      [{ a: [1, 2, 3] }, { a: [1, 2, 3] }],\n      [{ a: { b: { c: 1 } } }, { a: { b: { c: 1 } } }],\n      [{ a: [1, [2, [3]]] }, { a: [1, [2, [3]]] }],\n      [circularObject, circularObject],\n      [circularObject, { a: circularObject }],\n      [circularArray, circularArray],\n      [\n        { a: circularObject, b: circularArray },\n        { a: circularObject, b: circularArray }\n      ],\n      [{ a: simpleDate }, { a: simpleDate }]\n    ];\n    for (const [o1, o2] of testValues) {\n      expect(equals(o1, o2)).to.be.true;\n    }\n  });\n\n  it('should return false ', () => {\n    const testValues = [\n      [{ a: {} }, { a: [] }],\n      [{ a: [1, 2, 3] }, { a: [3, 2, 1] }],\n      [{ a: [1, [2, [3]]] }, { a: [1, [2, [4]]] }],\n      [{ a: { b: [{ c: 1 }, { d: [2, 3] }] } }, { a: { b: [{ c: 1 }, { d: [3, 2] }] } }],\n      [{ a: new Date() }, { a: new Date() }],\n      [circularObject, circularArray],\n      [circularObject, { b: circularObject }]\n    ];\n    for (const [o1, o2] of testValues) {\n      expect(equals(o1, o2)).to.be.false;\n    }\n  });\n});\n"]}