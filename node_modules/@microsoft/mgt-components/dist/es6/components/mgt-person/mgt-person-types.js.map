{"version":3,"file":"mgt-person-types.js","sourceRoot":"src/","sources":["components/mgt-person/mgt-person-types.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,MAAM,WAAW,GAAG,CAAC,OAAO,EAAE,UAAU,CAAU,CAAC;AAGnD,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,KAAc,EAAuB,EAAE,CAClE,OAAO,KAAK,KAAK,QAAQ,IAAI,WAAW,CAAC,QAAQ,CAAC,KAAmB,CAAC,CAAC;AACzE,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,KAAa,EAAE,eAA2B,OAAO,EAAc,EAAE,CACnG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nconst avatarTypes = ['photo', 'initials'] as const;\n\nexport type AvatarType = (typeof avatarTypes)[number];\nexport const isAvatarType = (value: unknown): value is AvatarType =>\n  typeof value === 'string' && avatarTypes.includes(value as AvatarType);\nexport const avatarTypeConverter = (value: string, defaultValue: AvatarType = 'photo'): AvatarType =>\n  isAvatarType(value) ? value : defaultValue;\n\n/**\n * Configuration object for the Person component\n *\n * @export\n * @interface MgtPersonConfig\n */\nexport interface MgtPersonConfig {\n  /**\n   * Sets or gets whether the person component can use Contacts APIs to\n   * find contacts and their images\n   *\n   * @type {boolean}\n   */\n  useContactApis: boolean;\n}\n"]}