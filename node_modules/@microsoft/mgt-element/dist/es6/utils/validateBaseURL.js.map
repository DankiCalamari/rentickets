{"version":3,"file":"validateBaseURL.js","sourceRoot":"src/","sources":["utils/validateBaseURL.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EAAiB,yBAAyB,EAAE,MAAM,WAAW,CAAC;AAErE;;;;;GAKG;AAEH,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,GAAW,EAAiB,EAAE;IAC5D,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5B,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAuB,CAAC;QACxD,IAAI,yBAAyB,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE,CAAC;YACpD,OAAO,gBAAgB,CAAC;QAC1B,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO;IACT,CAAC;AACH,CAAC,CAAC","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { GraphEndpoint, MICROSOFT_GRAPH_ENDPOINTS } from '../IGraph';\n\n/**\n * Helper method to validate a base URL string\n *\n * @param url a URL string\n * @returns GraphEndpoint\n */\n\nexport const validateBaseURL = (url: string): GraphEndpoint => {\n  try {\n    const urlObj = new URL(url);\n    const originAsEndpoint = urlObj.origin as GraphEndpoint;\n    if (MICROSOFT_GRAPH_ENDPOINTS.has(originAsEndpoint)) {\n      return originAsEndpoint;\n    }\n  } catch (error) {\n    return;\n  }\n};\n"]}