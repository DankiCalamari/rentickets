{"version":3,"file":"mgt-people-picker.js","sourceRoot":"src/","sources":["components/mgt-people-picker/mgt-people-picker.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;;;;;;;;;;;;;;;;AAEH,OAAO,EAAE,IAAI,EAAkB,MAAM,KAAK,CAAC;AAC3C,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAClD,OAAO,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AACvC,OAAO,EACL,UAAU,EACV,oBAAoB,EAEpB,QAAQ,EACR,sBAAsB,EACtB,WAAW,EACX,kBAAkB,EACnB,MAAM,0BAA0B,CAAC;AAClC,OAAO,EACL,UAAU,EACV,SAAS,EAET,mBAAmB,EAEnB,iBAAiB,EAClB,MAAM,0BAA0B,CAAC;AAClC,OAAO,EACL,SAAS,EACT,gBAAgB,EAChB,qBAAqB,EACrB,OAAO,EACP,kBAAkB,EAClB,QAAQ,EACT,MAAM,wBAAwB,CAAC;AAEhC,OAAO,EACL,SAAS,EACT,aAAa,EACb,yBAAyB,EACzB,cAAc,EAEd,OAAO,EACR,MAAM,wBAAwB,CAAC;AAChC,OAAO,2BAA2B,CAAC;AACnC,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAC3D,OAAO,EAAE,SAAS,EAAE,uBAAuB,EAAE,0BAA0B,EAAE,MAAM,0BAA0B,CAAC;AAC1G,OAAO,EAAa,0BAA0B,EAAE,MAAM,yCAAyC,CAAC;AAChG,OAAO,EAAE,MAAM,EAAE,MAAM,yBAAyB,CAAC;AACjD,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AACxD,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AACvE,OAAO,EAAE,wBAAwB,EAAE,MAAM,8BAA8B,CAAC;AACxE,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,OAAO,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAC;AAC3D,OAAO,EAAE,2BAA2B,EAAE,MAAM,2CAA2C,CAAC;AACxF,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAA8B,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AAK7F,MAAM,CAAC,MAAM,gCAAgC,GAAG,GAAG,EAAE;IACnD,wBAAwB,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;IAEtD,0BAA0B,EAAE,CAAC;IAC7B,0BAA0B,EAAE,CAAC;IAC7B,2BAA2B,EAAE,CAAC;IAC9B,iBAAiB,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AACH,MAAM,OAAO,eAAgB,SAAQ,yBAAyB;IAC5D;;;OAGG;IACH,MAAM,KAAK,MAAM;QACf,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,IAAc,OAAO;QACnB,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;;;;;OAMG;IACH,IAAc,MAAM;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC;IAED;;;;;;OAMG;IACH,IAAc,KAAK;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;IAC5D,CAAC;IAmJD;;;;OAIG;IACH,IAAW,cAAc;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IACD,IAIW,cAAc,CAAC,KAAuB;QAC/C,IAAI,CAAC,KAAK;YAAE,KAAK,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,EAAE,CAAC;YACjD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAuID;;;;;;OAMG;IACI,MAAM,KAAK,cAAc;QAC9B,OAAO;YACL,GAAG,IAAI,GAAG,CAAC;gBACT,eAAe;gBACf,aAAa;gBACb,gBAAgB;gBAChB,oBAAoB;gBACpB,eAAe;gBACf,GAAG,SAAS,CAAC,cAAc;aAC5B,CAAC;SACH,CAAC;IACJ,CAAC;IA2CD;QACE,KAAK,EAAE,CAAC;QAhWV;;;;WAIG;QAOI,aAAQ,GAAa,EAAE,CAAC;QAC/B;;;;;WAKG;QAKI,SAAI,GAAe,KAAK,CAAC;QAEhC;;;;;;WAMG;QA0BI,cAAS,GAAgB,CAAC,KAAK,CAAC,CAAC;QAExC;;;;;;;WAOG;QAKI,aAAQ,GAAa,KAAK,CAAC;QAElC;;;;WAIG;QAKI,qBAAgB,GAAG,KAAK,CAAC;QAEhC;;;;WAIG;QAKI,WAAM,GAA4B,IAAI,CAAC;QAE9C;;;;WAIG;QAKI,YAAO,GAAG,CAAC,CAAC;QAEnB;;;;;;WAMG;QAKI,kBAAa,GAAG,KAAK,CAAC;QAQ7B;;;;;;WAMG;QAKI,0BAAqB,GAA0B,MAAM,CAAC;QAsB7D;;;;;WAKG;QAQI,2BAAsB,GAAa,EAAE,CAAC;QAE7C;;;;;WAKG;QAQI,4BAAuB,GAAa,EAAE,CAAC;QAc9C;;;;;WAKG;QAKI,aAAQ,GAAG,KAAK,CAAC;QAExB;;;;;WAKG;QAKI,kBAAa,GAAG,KAAK,CAAC;QAc7B;;;;;WAKG;QAQI,YAAO,GAAa,EAAE,CAAC;QA8B9B;;;;;WAKG;QAKI,uBAAkB,GAAG,KAAK,CAAC;QAsBlC;;;;;;WAMG;QAEO,cAAS,GAAG,EAAE,CAAC;QAEjB,oBAAe,GAAqB,EAAE,CAAC;QAI/C,iDAAiD;QAChC,yBAAoB,GAAG,CAAC,CAAC,CAAC;QAInC,yBAAoB,GAAqB,EAAE,CAAC;QAC5C,0BAAqB,GAAqB,EAAE,CAAC;QACrD,iDAAiD;QAChC,sBAAiB,GAAc,EAAE,CAAC;QACnD,0DAA0D;QAClD,+BAA0B,GAAG,CAAC,CAAC;QAEvC;;WAEG;QACc,eAAU,GAAG,KAAK,CAAC;QAEpC;;WAEG;QACc,iBAAY,GAAG,KAAK,CAAC;QAsCtC;;WAEG;QACc,2BAAsB,GAAG,GAAG,EAAE;YAC7C,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACvD,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC;QACH,CAAC,CAAC;QAuQF;;;;;;WAMG;QACO,kBAAa,GAAG,GAAmB,EAAE;YAC7C,OAAO,CACL,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC;gBACpC,OAAO,CAAA;;;8BAGiB,IAAI,CAAC,OAAO,CAAC,cAAc;eAC1C,IAAI,CAAC,OAAO,CAAC,cAAc;;;QAGlC,CACH,CAAC;QACJ,CAAC,CAAC;QAkdF,qBAAqB;QACJ,qBAAgB,GAAG,GAAG,EAAE;YACvC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;gBACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,CAAC;QACH,CAAC,CAAC;QAEF,qBAAqB;QACJ,gBAAW,GAAG,GAAG,EAAE;YAClC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC;YACtB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC;QAEF,oBAAoB;QACH,cAAS,GAAG,GAAG,EAAE;YAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;YACvD,CAAC;YAED,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;YAEjE,IAAI,UAAU,EAAE,CAAC;gBACf,KAAK,MAAM,EAAE,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;oBACrC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oBAC/B,EAAE,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;gBAC5C,CAAC;YACH,CAAC;YAED,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC;QAEF;;WAEG;QACc,gBAAW,GAAG,CAAC,KAAoB,EAAQ,EAAE;YAC5D,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC;YAC1B,MAAM,cAAc,GAAG,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,cAAc,IAAI,OAAO,KAAK,GAAG,CAAC;YAClD,MAAM,UAAU,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAEzF,IAAI,CAAC,CAAC,OAAO,IAAI,cAAc,CAAC,IAAI,UAAU,EAAE,CAAC;gBAC/C,IAAI,cAAc,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;oBACpE,8EAA8E;oBAC9E,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC;gBAED,IAAI,OAAO,KAAK,WAAW,EAAE,CAAC;oBAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;wBAC3C,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBAC1B,CAAC;gBACH,CAAC;gBACD,OAAO;YACT,CAAC;YAED,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAAE,OAAO;YAExD,IAAI,OAAO,KAAK,QAAQ,EAAE,CAAC;gBACzB,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;gBAC/B,OAAO;YACT,CAAC;YAED,IAAI,OAAO,KAAK,WAAW,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC7F,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,sCAAsC;gBACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACpF,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC;gBACtB,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,OAAO;YACT,CAAC;YAED,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;gBACjC,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;oBACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBAC1B,CAAC;gBACD,OAAO;YACT,CAAC;QACH,CAAC,CAAC;QAEe,gBAAW,GAAG,CAAC,KAAiB,EAAE,EAAE;YACnD,MAAM,KAAK,GAAG,KAAK,CAAC,MAA0B,CAAC;YAC/C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC;YAC7B,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,MAAM,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAChD,IAAI,UAAU,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrC,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;wBACtB,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,CAAC;gBACH,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,CAAC;gBACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACzB,CAAC;QACH,CAAC,CAAC;QA6CF;;;;WAIG;QACc,kBAAa,GAAG,CAAC,KAAoB,EAAQ,EAAE;YAC9D,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC;YAC1B,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YACrE,MAAM,cAAc,GAAG,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YAC3F,IAAI,cAAc,IAAI,YAAY,EAAE,CAAC;gBACnC,MAAM,cAAc,GAAG,YAAY,CAAC,gBAAgB,CAAC,kCAAkC,CAAC,CAAC;gBACzF,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,cAAc,IAAI,OAAO,KAAK,WAAW,EAAE,CAAC;oBAC9C,IAAI,CAAC,0BAA0B;wBAC7B,CAAC,IAAI,CAAC,0BAA0B,GAAG,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC;oBACxF,IAAI,IAAI,CAAC,0BAA0B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC;wBAC3F,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC;oBAC/E,CAAC;yBAAM,CAAC;wBACN,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;oBACtC,CAAC;gBACH,CAAC;qBAAM,IAAI,cAAc,IAAI,OAAO,KAAK,YAAY,EAAE,CAAC;oBACtD,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC;oBAC5C,IAAI,MAAM,EAAE,CAAC;wBACX,MAAM,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC;wBAC1C,IAAI,YAAY,EAAE,CAAC;4BACjB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;4BACpC,IAAI,CAAC,0BAA0B,EAAE,CAAC;wBACpC,CAAC;oBACH,CAAC;gBACH,CAAC;qBAAM,IAAI,cAAc,IAAI,OAAO,KAAK,GAAG,EAAE,CAAC;oBAC7C,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;oBAC5B,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxE,CAAC;gBACD,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBAC3B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACvD,CAAC;gBACD,OAAO;YACT,CAAC;YAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;gBACxB,OAAO;YACT,CAAC;YAED,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,WAAW,EAAE,CAAC;gBACrD,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBACjC,KAAK,CAAC,cAAc,EAAE,CAAC;YACzB,CAAC;YAED,IAAI,OAAO,KAAK,OAAO,EAAE,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;oBACzC,KAAK,CAAC,cAAc,EAAE,CAAC;oBAEvB,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;oBACjE,IAAI,WAAW,EAAE,CAAC;wBAChB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;wBAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;wBAClB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;wBACtB,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;4BAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBAC1B,CAAC;wBACD,OAAO;oBACT,CAAC;gBACH,CAAC;gBAED,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;oBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACxB,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC;YACH,CAAC;YAED,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;gBACxC,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;oBACvB,6CAA6C;oBAC7C,IAAI,KAAK,KAAK,OAAO;wBAAE,KAAK,CAAC,cAAc,EAAE,CAAC;oBAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;oBAClC,IAAI,CAAC,cAAc,EAAE,CAAC;gBACxB,CAAC;YACH,CAAC;YACD,mGAAmG;YACnG,IAAI,OAAO,KAAK,KAAK,EAAE,CAAC;gBACtB,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC;QACH,CAAC,CAAC;QA4BF;;WAEG;QACc,cAAS,GAAG,GAAG,EAAE;YAChC,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAC9B,GAAG,EAAE;gBACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChC,CAAC,EACD,GAAG,EAAE;gBACH,2BAA2B;YAC7B,CAAC,CACF,CAAC;QACJ,CAAC,CAAC;QAEF;;WAEG;QACc,eAAU,GAAG,GAAG,EAAE;YACjC,KAAK,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACnC,CAAC,CAAC;QAEF;;WAEG;QACc,gBAAW,GAAG,GAAG,EAAE;YAClC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CACjC,UAAU,CAAC,EAAE;gBACX,IAAI,UAAU,EAAE,CAAC;oBACf,IAAI,CAAC;wBACH,MAAM,MAAM,GAAqB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAqB,CAAC;wBAC5E,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;4BAChC,KAAK,MAAM,MAAM,IAAI,MAAM,EAAE,CAAC;gCAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;4BACzB,CAAC;wBACH,CAAC;oBACH,CAAC;oBAAC,OAAO,KAAK,EAAE,CAAC;wBACf,IAAI,KAAK,YAAY,WAAW,EAAE,CAAC;4BACjC,MAAM,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;4BAC9B,IAAI,WAAqB,CAAC;4BAC1B,IAAI,CAAC;gCACH,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE,CAAC;oCACnC,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;oCAC1C,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wCAC3B,IAAI,CAAC,UAAU,EAAE,CAAC;wCAClB,KAAK,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;wCACvC,MAAM;oCACR,CAAC;gCACH,CAAC;gCACD,oCAAoC;4BACtC,CAAC;4BAAC,OAAO,CAAC,EAAE,CAAC,CAAA,CAAC;wBAChB,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YACD,6DAA6D;YAC7D,KAAK,CAAC,EAAE;gBACN,8EAA8E;gBAC9E,kHAAkH;gBAClH,qEAAqE;gBACrE,kDAAkD;YACpD,CAAC,CACF,CAAC;QACJ,CAAC,CAAC;QAjlCA,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACzE,CAAC;IAED;;OAEG;IACK,gBAAgB;QACtB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAmB,OAAO,CAAC,CAAC;QACpF,IAAI,YAAY,EAAE,CAAC;YACjB,YAAY,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAC9C,YAAY,CAAC,KAAK,GAAG,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IAED;;OAEG;IACK,eAAe;QACrB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAmB,OAAO,CAAC,CAAC;QACpF,IAAI,YAAY,EAAE,CAAC;YACjB,YAAY,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YACzC,YAAY,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IAWD,IAAY,gBAAgB;QAC1B,OAAO,IAAI,CAAC,aAAa,KAAK,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,CAAC;IAC5E,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,OAAsB;QACjC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChB,OAAO;QACT,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED;;;;;;OAMG;IACU,eAAe,CAAC,OAA0B;;;YACrD,MAAM,QAAQ,GAAG,SAAS,CAAC,cAAc,CAAC;YAC1C,MAAM,KAAK,GAAG,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC;YAC7C,IAAI,QAAQ,IAAI,QAAQ,CAAC,KAAK,KAAK,aAAa,CAAC,QAAQ,EAAE,CAAC;gBAC1D,4EAA4E;gBAC5E,KAAK,MAAM,EAAE,IAAI,OAAO,EAAE,CAAC;oBACzB,MAAM,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;oBAC3B,IAAI,CAAC;wBACH,MAAM,aAAa,GAAG,MAAM,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,uBAAuB,CAAC,CAAC;wBAC5E,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;oBAChC,CAAC;oBAAC,OAAO,CAAU,EAAE,CAAC;wBACpB,4EAA4E;wBAC5E,yGAAyG;wBACzG,IAAI,YAAY,CAAC,CAAC,CAAC,KAAI,MAAA,CAAC,CAAC,OAAO,0CAAE,QAAQ,CAAC,gBAAgB,CAAC,CAAA,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;4BACnF,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;gCACzB,MAAM,WAAW,GAAG;oCAClB,IAAI,EAAE,MAAM;oCACZ,WAAW,EAAE,MAAM;iCACpB,CAAC;gCACF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;4BAC9B,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;;KACF;IACD;;;;;;OAMG;IACU,gBAAgB,CAAC,QAA2B;;YACvD,MAAM,QAAQ,GAAG,SAAS,CAAC,cAAc,CAAC;YAC1C,MAAM,KAAK,GAAG,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC;YAC7C,IAAI,QAAQ,IAAI,QAAQ,CAAC,KAAK,KAAK,aAAa,CAAC,QAAQ,EAAE,CAAC;gBAC1D,4EAA4E;gBAC5E,KAAK,MAAM,EAAE,IAAI,QAAQ,EAAE,CAAC;oBAC1B,IAAI,CAAC;wBACH,MAAM,YAAY,GAAG,MAAM,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;wBACzD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;oBAC/B,CAAC;oBAAC,OAAO,CAAC,EAAE,CAAC;wBACX,QAAQ;oBACV,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,MAAM;QACX,MAAM,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QACtF,IAAI,eAAe,EAAE,CAAC;YACpB,OAAO,eAAe,CAAC;QACzB,CAAC;QAED,MAAM,sBAAsB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAE9E,IAAI,IAAI,CAAC,aAAa,KAAK,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACxE,OAAO,sBAAsB,CAAC;QAChC,CAAC;aAAM,CAAC;YACN,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;YAC/D,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAExD,OAAO,IAAI,CAAA;;UAEP,cAAc;;KAEnB,CAAC;QACF,CAAC;IACH,CAAC;IAES,IAAI;QACZ,OAAO;YACL,IAAI,CAAC,aAAa;YAClB,IAAI,CAAC,OAAO;YACZ,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,IAAI;YACT,IAAI,CAAC,SAAS;YACd,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,MAAM;YACX,IAAI,CAAC,OAAO;YACZ,IAAI,CAAC,sBAAsB;YAC3B,IAAI,CAAC,uBAAuB;YAC5B,IAAI,CAAC,OAAO;YACZ,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,aAAa;YAClB,IAAI,CAAC,YAAY;SAClB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACO,UAAU;QAClB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;IACtC,CAAC;IAED;;;;;;OAMG;IACO,WAAW,CAAC,sBAAsC;;QAC1D,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;QAC/F,MAAM,sBAAsB,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC;QAEhG,MAAM,UAAU,GAAG,IAAI,CAAA,6BAA6B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;QACpF,MAAM,SAAS,GAAG,CAAA,MAAA,IAAI,CAAC,cAAc,0CAAE,MAAM,IAAG,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,UAAU,CAAC;QACxF,OAAO,IAAI,CAAA;;;;;;;;;sBASO,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,WAAW;qBAC5E,IAAI,CAAC,SAAS,IAAI,sBAAsB,IAAI,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa;wBAClF,MAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,MAAM,mCAAI,KAAK;kBAClC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB;kBACzD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW;oBAClD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa;kBACxD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW;iBACrD,IAAI,CAAC,SAAS;oBACX,IAAI,CAAC,QAAQ;;6BAEJ,SAAS;;KAEjC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACO,oBAAoB,CAAC,cAAiC;QAC9D,IAAI,CAAC,CAAA,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,MAAM,CAAA,EAAE,CAAC;YAC5B,OAAO,IAAI,CAAA,EAAE,CAAC;QAChB,CAAC;QAED,OAAO,IAAI,CAAA;;;sBAGO,IAAI,CAAC,OAAO,CAAC,QAAQ;;YAE/B,MAAM,CACN,cAAc,EACd,MAAM,CAAC,EAAE,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,EACpB,MAAM,CAAC,EAAE;;YAAC,OAAA,IAAI,CAAA;;gBAGV,IAAI,CAAC,cAAc,CACjB,iBAAiB,EACjB,EAAE,MAAM,EAAE,EACV,YAAY,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,EAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,CAC1D,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,CACvC;;;;;;8BAMgB,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,mCAAI,EAAE;0BAC/D,CAAC,CAAU,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC;4BAC1C,CAAC,CAAgB,EAAE,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,CAAC;oBACvE,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;;gBAEzB,CAAA;SAAA,CACL;YACC,CAAC;IACX,CAAC;IACD;;;;;;OAMG;IACO,YAAY,CAAC,MAAsB;QAC3C,OAAO,OAAO,CAAA;;WAEP,MAAM;;;;;mBAKE,CAAC,CAAa,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;qBAC5C,CAAC,CAAgB,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;;aAEnD,IAAI,CAAC,mBAAmB,EAAE;;;MAGjC,CAAC;IACL,CAAC;IAED;;;;;;OAMG;IACO,mBAAmB;QAC3B,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,UAAU,CAAC,OAAO,EAAE,CAAC;YAC7C,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;QAC9B,CAAC;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;QAEjC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,KAAK,CAAC,EAAE,CAAC;YACzD,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;QAC7B,CAAC;aAAM,CAAC;YACN,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAuBD;;;;;;OAMG;IACO,YAAY;QACpB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACrB,OAAO;QACT,CAAC;QACD,OAAO,CACL,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC;YAClC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC;YACpC,IAAI,CAAA;;6BAEmB,IAAI,CAAC,OAAO,CAAC,cAAc;eACzC,IAAI,CAAC,OAAO,CAAC,cAAc;;;QAGlC,CACH,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACO,mBAAmB,CAAC,MAAwB;QACpD,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAA;;;;;;sBAMO,IAAI,CAAC,OAAO,CAAC,gBAAgB;gBACnC,IAAI,CAAC,OAAO,CAAC,gBAAgB;;UAEnC,MAAM,CACN,cAAc,EACd,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EACnB,MAAM,CAAC,EAAE,CAAC,IAAI,CAAA;;kBAEN,MAAM,CAAC,EAAE;;;sBAGL,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;gBAC9C,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;;SAEtC,CACA;;MAEH,CAAC;IACL,CAAC;IAED;;;;;;;OAOG;IACO,kBAAkB,CAAC,MAAsB;QACjD,OAAO,CACL,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC;YACpD,OAAO,CAAA;;;2BAGc,IAAI,CAAC,YAAY;;;2BAGjB,MAAM;yBACR,CAAC,IAAI,CAAC,aAAa;;uBAErB,CAClB,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACO,oBAAoB,CAAC,MAAsB;QACnD,OAAO,OAAO,CAAA;;;0BAGQ,MAAM;wBACR,CAAC,IAAI,CAAC,aAAa;;uBAEpB,IAAI,CAAC,qBAAqB;;MAE3C,CAAC;IACL,CAAC;IAED;;;OAGG;IACa,SAAS;;;YACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;YAC3C,MAAM,QAAQ,GAAG,SAAS,CAAC,cAAc,CAAC;YAE1C,IAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,EAAE,CAAC;gBACnB,IAAI,KAAK,EAAE,CAAC;oBACV,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;oBACpG,MAAM,GAAG,gBAAgB,CAAC;gBAC5B,CAAC;YACH,CAAC;iBAAM,IAAI,CAAC,MAAM,IAAI,QAAQ,IAAI,QAAQ,CAAC,KAAK,KAAK,aAAa,CAAC,QAAQ,EAAE,CAAC;gBAC5E,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBAEhD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;oBAClB,IACE,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,uBAAuB,CAAC,MAAM,GAAG,CAAC,CAAC;wBACnF,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM;wBAC3B,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM;wBACjC,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAClC,CAAC;wBACD,IAAI,CAAC,oBAAoB,GAAG,MAAM,kBAAkB,CAClD,KAAK,EACL,IAAI,CAAC,sBAAsB,EAC3B,EAAE,EACF,IAAI,CAAC,WAAW,CACjB,CAAC;wBACF,IAAI,CAAC,qBAAqB,GAAG,MAAM,oBAAoB,CACrD,KAAK,EACL,IAAI,CAAC,uBAAuB,EAC5B,IAAI,CAAC,aAAa,CACnB,CAAC;wBAEF,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;4BACrE,OAAO,KAAK,KAAK,IAAI,CAAC;wBACxB,CAAC,CAAC,CAAC;wBAEH,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;4BAClE,OAAO,IAAI,KAAK,IAAI,CAAC;wBACvB,CAAC,CAAC,CAAC;wBAEH,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,oBAAoB,EAAE,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC;wBAEpF,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;4BAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBAC1B,CAAC;wBACD,IAAI,CAAC,aAAa,EAAE,CAAC;oBACvB,CAAC;oBACD,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;wBACvB,OAAO;oBACT,CAAC;oBACD,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;wBACvB,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;oBAC9B,CAAC;yBAAM,CAAC;wBACN,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;4BACzC,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE,CAAC;gCAC/B,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;oCACjB,IAAI,CAAC;wCACH,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;4CAC1B,IAAI,CAAC,YAAY,GAAG,MAAM,gBAAgB,CACxC,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,gBAAgB,CACtB,CAAC;wCACJ,CAAC;6CAAM,CAAC;4CACN,IAAI,CAAC,YAAY,GAAG,MAAM,gBAAgB,CACxC,KAAK,EACL,IAAI,EACJ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,aAAa,CACnB,CAAC;wCACJ,CAAC;oCACH,CAAC;oCAAC,OAAO,CAAC,EAAE,CAAC;wCACX,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;oCACzB,CAAC;gCACH,CAAC;qCAAM,CAAC;oCACN,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;wCAC1B,IAAI,CAAC;4CACH,IAAI,CAAC,YAAY,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;wCAC1F,CAAC;wCAAC,OAAO,CAAC,EAAE,CAAC;4CACX,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;wCACzB,CAAC;oCACH,CAAC;yCAAM,CAAC;wCACN,IAAI,CAAC;4CACH,MAAM,cAAc,GAAG,MAAM,qBAAqB,CAChD,KAAK,EACL,EAAE,EACF,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,WAAW,CACjB,CAAC;4CACF,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;wCACrC,CAAC;wCAAC,OAAO,CAAC,EAAE,CAAC;4CACX,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;wCACzB,CAAC;oCACH,CAAC;gCACH,CAAC;4BACH,CAAC;4BACD,MAAM,GAAG,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;wBACnC,CAAC;6BAAM,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE,CAAC;4BACzD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;gCACxB,MAAM,GAAG,MAAM,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;4BAC/E,CAAC;iCAAM,CAAC;gCACN,MAAM,mBAAmB,GAAG,IAAI,CAAC,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC;gCACpF,IAAI,IAAI,CAAC,WAAW,IAAI,mBAAmB,EAAE,CAAC;oCAC5C,MAAM,GAAG,MAAM,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gCACjE,CAAC;qCAAM,CAAC;oCACN,MAAM,GAAG,MAAM,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gCACnF,CAAC;4BACH,CAAC;wBACH,CAAC;6BAAM,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;4BACjC,IAAI,MAAM,GAAG,CAAC,MAAM,UAAU,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;4BAClG,2DAA2D;4BAC3D,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;gCAC5C,oGAAoG;gCACpG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;4BAC9B,CAAC;4BACD,MAAM,GAAG,MAAM,CAAC;wBAClB,CAAC;wBACD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;oBAC9B,CAAC;gBACH,CAAC;gBAED,IAAI,KAAK,EAAE,CAAC;oBACV,MAAM,GAAG,EAAE,CAAC;oBAEZ,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;wBACjB,MAAM;4BACJ,CAAC,MAAM,gBAAgB,CACrB,KAAK,EACL,KAAK,EACL,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,aAAa,CACnB,CAAC,IAAI,EAAE,CAAC;oBACb,CAAC;yBAAM,CAAC;wBACN,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE,CAAC;4BAClD,IAAI,CAAC;gCACH,2BAA2B;gCAC3B,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,EAAE,CAAC;oCAC5D,uEAAuE;oCACvE,IAAI,MAAA,IAAI,CAAC,OAAO,0CAAE,MAAM,EAAE,CAAC;wCACzB,gCAAgC;wCAChC,MAAM,GAAG,MAAM,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;oCAClF,CAAC;yCAAM,CAAC;wCACN,MAAM,GAAG,MAAM,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;oCACzE,CAAC;gCACH,CAAC;qCAAM,CAAC;oCACN,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;wCAC1B,IAAI,MAAA,IAAI,CAAC,OAAO,0CAAE,MAAM,EAAE,CAAC;4CACzB,gCAAgC;4CAChC,MAAM,GAAG,MAAM,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;wCAClF,CAAC;6CAAM,CAAC;4CACN,MAAM,GAAG,CAAC,MAAM,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,CAAC;wCACnG,CAAC;oCACH,CAAC;yCAAM,CAAC;wCACN,8CAA8C;wCAC9C,IAAI,CAAC;4CACH,MAAM,GAAG,MAAM,qBAAqB,CAClC,KAAK,EACL,KAAK,EACL,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,WAAW,CACjB,CAAC;wCACJ,CAAC;wCAAC,OAAO,CAAC,EAAE,CAAC;4CACX,MAAM;wCACR,CAAC;oCACH,CAAC;gCACH,CAAC;4BACH,CAAC;4BAAC,OAAO,CAAC,EAAE,CAAC;gCACX,MAAM;4BACR,CAAC;4BAED,sFAAsF;4BACtF,qCAAqC;4BACrC,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;gCACpG,IAAI,CAAC;oCACH,MAAM,KAAK,GAAG,CAAC,MAAM,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;oCAEpF,+BAA+B;oCAC/B,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oCACjD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;wCACzB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;4CAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wCACpB,CAAC;oCACH,CAAC;gCACH,CAAC;gCAAC,OAAO,CAAC,EAAE,CAAC;oCACX,QAAQ;gCACV,CAAC;4BACH,CAAC;wBACH,CAAC;wBAED,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;4BACnF,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gCACzB,IAAI,CAAC;oCACH,MAAM,GAAG,MAAM,sBAAsB,CACnC,KAAK,EACL,KAAK,EACL,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,WAAW,CACjB,CAAC;gCACJ,CAAC;gCAAC,OAAO,CAAC,EAAE,CAAC;oCACX,QAAQ;gCACV,CAAC;4BACH,CAAC;iCAAM,CAAC;gCACN,IAAI,MAAM,GAAG,EAAE,CAAC;gCAChB,IAAI,CAAC;oCACH,MAAM,GAAG,CAAC,MAAM,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;oCACjG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gCACjC,CAAC;gCAAC,OAAO,CAAC,EAAE,CAAC;oCACX,MAAM;gCACR,CAAC;4BACH,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;YACD,yCAAyC;YACzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;;KAC/C;IAED;;;;;;OAMG;IACW,oBAAoB,CAAC,KAAa,EAAE,MAAwB;;YACxE,MAAM,MAAM,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACnF,KAAK,MAAM,KAAK,IAAI,MAA0B,EAAE,CAAC;gBAC/C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC;YACD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;YACzC,OAAO,MAAM,CAAC;QAChB,CAAC;KAAA;IAED;;;;;OAKG;IACO,UAAU;QAClB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,MAAM,EAAE,CAAC;YACX,MAAM,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;QACD,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;QACvD,CAAC;QACD,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;IACjC,CAAC;IAED;;;;;OAKG;IACO,UAAU;QAClB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,MAAM,EAAE,CAAC;YACX,MAAM,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QACD,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACO,YAAY,CAAC,MAAsB,EAAE,CAAU;QACvD,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,MAAM,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YACvD,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;gBAChC,OAAO,CAAC,CAAC,WAAW,KAAK,MAAM,CAAC,WAAW,CAAC;YAC9C,CAAC;YACD,OAAO,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,iBAAiB,CAAC;QACxC,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC;IACxB,CAAC;IAED;;;;;OAKG;IACO,yBAAyB,CAAC,MAAsB,EAAE,CAAgB;QAC1E,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACO,SAAS,CAAC,MAAsB;QACxC,IAAI,MAAM,EAAE,CAAC;YACX,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC,EAAE,EAAE,CAAC,CAAC;YACP,MAAM,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;gBACrD,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;oBAChC,OAAO,CAAC,CAAC,WAAW,KAAK,MAAM,CAAC,WAAW,CAAC;gBAC9C,CAAC;gBACD,OAAO,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACjC,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;gBACvD,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC;gBACtB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;YACjC,CAAC;YACD,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC;QACH,CAAC;IACH,CAAC;IAEO,UAAU;QAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,aAAa,KAAK,QAAQ,EAAE,CAAC;YACpC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAyGO,cAAc;QACpB,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;QAC/B,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;YACjC,MAAM,WAAW,GAAG;gBAClB,IAAI,EAAE,IAAI,CAAC,SAAS;gBACpB,WAAW,EAAE,IAAI,CAAC,SAAS;aAC5B,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC9B,CAAC;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC;IACH,CAAC;IAED,oCAAoC;IAC5B,qBAAqB,CAAC,MAAsB;QAClD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACK,gBAAgB;QACtB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,GAAS,EAAE;gBAC1C,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC,CAAA,EAAE,GAAG,CAAC,CAAC;QACV,CAAC;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IA0FD;;OAEG;IACW,oBAAoB;;YAChC,MAAM,QAAQ,GAAG,EAAE,CAAC;YACpB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC7C,2DAA2D;gBAC3D,MAAM,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,GAAG,OAAO,CAAC,gBAAgB,CAC7F,CAAC;gBACP,IAAI,YAAoB,CAAC;gBACzB,IAAI,oBAAoB,IAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAC5D,YAAY,GAAG,oBAAoB,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC;gBACpD,CAAC;qBAAM,CAAC;oBACN,YAAY,GAAG,iBAAiB,IAAI,IAAI,CAAC;gBAC3C,CAAC;gBAED,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC;YAC1D,CAAC;YACD,IAAI,aAAa,GAAG,EAAE,CAAC;YACvB,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACxB,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC3C,CAAC;YAED,MAAM,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACrD,CAAC;KAAA;IAkED;;OAEG;IACK,sBAAsB;QAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAChH,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;QACpC,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD;;;;OAIG;IACK,uBAAuB,CAAC,MAAiB;QAC/C,KAAK,MAAM,MAAM,IAAI,MAAM,EAAE,CAAC;YAC5B,MAAM,aAAa,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,aAAa,CAAC;YAC5C,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAED;;OAEG;IACK,gBAAgB,CAAC,IAAc;QACrC,IAAI,IAAI,EAAE,CAAC;YACT,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QACvC,CAAC;aAAM,CAAC;YACN,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC5C,MAAM,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;gBAC3C,IAAI,aAAa,EAAE,CAAC;oBAClB,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC;YACD,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IAED;;;;OAIG;IACK,oBAAoB,CAAC,KAAqB;;QAChD,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;QAE1E,IAAI,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,QAAQ,0CAAE,MAAM,EAAE,CAAC;YACjC,IAAI,KAAK,EAAE,CAAC;gBACV,qBAAqB;gBACrB,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,EAAE,CAAC;oBAC5B,IAAI,IAAI,CAAC,oBAAoB,KAAK,CAAC,CAAC,EAAE,CAAC;wBACrC,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;oBAChC,CAAC;yBAAM,CAAC;wBACN,IAAI,CAAC,oBAAoB;4BACvB,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC9F,CAAC;gBACH,CAAC;gBACD,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW,EAAE,CAAC;oBAC9B,IAAI,IAAI,CAAC,oBAAoB,KAAK,CAAC,CAAC,EAAE,CAAC;wBACrC,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;oBAChC,CAAC;yBAAM,CAAC;wBACN,IAAI,CAAC,oBAAoB;4BACvB,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC9F,CAAC;gBACH,CAAC;YACH,CAAC;YAED,KAAK,MAAM,MAAM,IAAI,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,QAAQ,mCAAI,EAAE,EAAE,CAAC;gBAChD,MAAM,CAAC,GAAG,MAAqB,CAAC;gBAChC,CAAC,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;gBACzC,CAAC,CAAC,IAAI,EAAE,CAAC;gBACT,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YAChC,CAAC;YAED,0BAA0B;YAC1B,4BAA4B;YAC5B,MAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAgB,CAAC;YAElF,IAAI,WAAW,EAAE,CAAC;gBAChB,WAAW,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;gBAC1C,WAAW,CAAC,KAAK,EAAE,CAAC;gBACpB,WAAW,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;gBACxF,WAAW,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;gBAClD,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,uBAAuB,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,EAAE,CAAC,CAAC;YACpE,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;;OAIG;IACK,YAAY,CAAC,MAAwB;QAC3C,qCAAqC;QACrC,oCAAoC;QACpC,gCAAgC;QAChC,MAAM,YAAY,GAAqB,EAAE,CAAC;QAC1C,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAChC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;YACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBAC5C,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC;YACxC,CAAC,CAAC,CAAC;YAEH,cAAc;YACd,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,MAAsB,EAAE,EAAE;gBACxD,IAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,EAAE,CAAC;oBACf,OAAO,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC5C,CAAC;qBAAM,CAAC;oBACN,OAAO,QAAQ,CAAC,OAAO,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;gBACtD,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,oBAAoB;YACpB,MAAM,OAAO,GAAG,IAAI,GAAG,EAAU,CAAC;YAClC,KAAK,MAAM,CAAC,IAAI,QAAQ,EAAE,CAAC;gBACzB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtB,CAAC;YAED,OAAO,CAAC,OAAO,CAAC,CAAC,MAAc,EAAE,EAAE;gBACjC,MAAM,CAAC,GAAmB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAmB,CAAC;gBAC/D,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,kEAAkE;IAC1D,mBAAmB,CAAC,CAAa;QACvC,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC7D,IAAI,MAAM,EAAE,CAAC;YACX,IACE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,KAAK,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC,EACpF,CAAC;gBACD,CAAC,CAAC,eAAe,EAAE,CAAC;YACtB,CAAC;QACH,CAAC;IACH,CAAC;CACF;AArkDQ;IADN,QAAQ,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;;gDAC/C;AAahB;IANN,QAAQ,CAAC;QACR,SAAS,EAAE,WAAW;QACtB,SAAS,EAAE,KAAK,CAAC,EAAE;YACjB,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7C,CAAC;KACF,CAAC;;iDAC6B;AAWxB;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,MAAM;QACjB,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC;KACtD,CAAC;;6CAC8B;AAkCzB;IAzBN,QAAQ,CAAC;QACR,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,KAAK,CAAC,EAAE;YACjB,MAAM,aAAa,GAAgB,CAAC,KAAK,CAAC,CAAC;YAC3C,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACjC,OAAO,aAAa,CAAC;YACvB,CAAC;YAED,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChC,MAAM,UAAU,GAAgB,EAAE,CAAC;YAEnC,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC;gBACrB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;gBACb,IAAI,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;oBACnB,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,CAAC;YACH,CAAC;YAED,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC5B,OAAO,aAAa,CAAC;YACvB,CAAC;YAED,OAAO,UAAU,CAAC;QACpB,CAAC;KACF,CAAC;;kDACsC;AAcjC;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,WAAW;QACtB,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,iBAAiB,CAAC,KAAK,CAAC;KAC7C,CAAC;;iDACgC;AAW3B;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,mBAAmB;QAC9B,IAAI,EAAE,OAAO;KACd,CAAC;;yDAC8B;AAWzB;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,QAAQ;QACnB,IAAI,EAAE,MAAM;KACb,CAAC;;+CAC4C;AAWvC;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,UAAU;QACrB,IAAI,EAAE,MAAM;KACb,CAAC;;gDACiB;AAaZ;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,gBAAgB;QAC3B,IAAI,EAAE,OAAO;KACd,CAAC;;sDAC2B;AAMtB;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,eAAe;QAC1B,IAAI,EAAE,OAAO;KACd,CAAC;;qDAC2B;AAatB;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,aAAa;QACxB,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,mBAAmB,CAAC,KAAK,CAAC;KAC/C,CAAC;;8DAC2D;AAU7D;IAAC,QAAQ,CAAC;QACR,SAAS,EAAE,iBAAiB;QAC5B,IAAI,EAAE,KAAK;KACZ,CAAC;;;qDAOD;AAeM;IAPN,QAAQ,CAAC;QACR,SAAS,EAAE,2BAA2B;QACtC,SAAS,EAAE,KAAK,CAAC,EAAE;YACjB,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7C,CAAC;QACD,IAAI,EAAE,MAAM;KACb,CAAC;;+DAC2C;AAetC;IAPN,QAAQ,CAAC;QACR,SAAS,EAAE,4BAA4B;QACvC,SAAS,EAAE,KAAK,CAAC,EAAE;YACjB,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7C,CAAC;QACD,IAAI,EAAE,MAAM;KACb,CAAC;;gEAC4C;AAYvC;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,aAAa;QACxB,IAAI,EAAE,MAAM;KACb,CAAC;;oDACyB;AAYpB;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,UAAU;QACrB,IAAI,EAAE,OAAO;KACd,CAAC;;iDACsB;AAYjB;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,iBAAiB;QAC5B,IAAI,EAAE,OAAO;KACd,CAAC;;sDAC2B;AAYtB;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,gBAAgB;QAC3B,IAAI,EAAE,MAAM;KACb,CAAC;;sDAC2B;AAetB;IAPN,QAAQ,CAAC;QACR,SAAS,EAAE,UAAU;QACrB,SAAS,EAAE,KAAK,CAAC,EAAE;YACjB,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7C,CAAC;QACD,IAAI,EAAE,MAAM;KACb,CAAC;;gDAC4B;AAMvB;IADN,QAAQ,CAAC,EAAE,SAAS,EAAE,cAAc,EAAE,CAAC;;oDACb;AAMpB;IADN,QAAQ,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;;sDACb;AAMtB;IADN,QAAQ,CAAC,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;;qDACb;AAUrB;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,YAAY;QACvB,IAAI,EAAE,MAAM;KACb,CAAC;;kDACuB;AAYlB;IAJN,QAAQ,CAAC;QACR,SAAS,EAAE,qBAAqB;QAChC,IAAI,EAAE,OAAO;KACd,CAAC;;2DACgC;AA8BxB;IADT,KAAK,EAAE;;kDACiB;AAOR;IAAhB,KAAK,EAAE;;6DAAmC;AAO1B;IAAhB,KAAK,EAAE;;0DAA2C;AAOlC;IAAhB,KAAK,EAAE;;mDAA4B;AAKnB;IAAhB,KAAK,EAAE;;qDAA8B;AAKrB;IAAhB,KAAK,EAAE;;qDAAwC","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { TaskStatus } from '@lit/task';\nimport {\n  findGroups,\n  getGroupsForGroupIds,\n  GroupType,\n  getGroup,\n  findGroupsFromGroupIds,\n  isGroupType,\n  groupTypeConverter\n} from '../../graph/graph.groups';\nimport {\n  findPeople,\n  getPeople,\n  PersonType,\n  personTypeConverter,\n  UserType,\n  userTypeConverter\n} from '../../graph/graph.people';\nimport {\n  findUsers,\n  findGroupMembers,\n  findUsersFromGroupIds,\n  getUser,\n  getUsersForUserIds,\n  getUsers\n} from '../../graph/graph.user';\nimport { IDynamicPerson } from '../../graph/types';\nimport {\n  Providers,\n  ProviderState,\n  MgtTemplatedTaskComponent,\n  arraysAreEqual,\n  IGraph,\n  mgtHtml\n} from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport { debounce, isValidEmail } from '../../utils/Utils';\nimport { MgtPerson, defaultPersonProperties, registerMgtPersonComponent } from '../mgt-person/mgt-person';\nimport { MgtFlyout, registerMgtFlyoutComponent } from '../sub-components/mgt-flyout/mgt-flyout';\nimport { styles } from './mgt-people-picker-css';\nimport { SvgIcon, getSvg } from '../../utils/SvgHelper';\nimport { fluentTextField, fluentCard } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { strings } from './strings';\nimport { Person, User } from '@microsoft/microsoft-graph-types';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtSpinnerComponent } from '../sub-components/mgt-spinner/mgt-spinner';\nimport { isGraphError } from '../../graph/isGraphError';\nimport { type PersonCardInteraction, personCardConverter } from './../PersonCardInteraction';\n\nexport { GroupType } from '../../graph/graph.groups';\nexport { PersonType, UserType } from '../../graph/graph.people';\n\nexport const registerMgtPeoplePickerComponent = () => {\n  registerFluentComponents(fluentTextField, fluentCard);\n\n  registerMgtFlyoutComponent();\n  registerMgtPersonComponent();\n  registerMgtSpinnerComponent();\n  registerComponent('people-picker', MgtPeoplePicker);\n};\n\n/**\n * Web component used to search for people from the Microsoft Graph\n *\n * @export\n * @class MgtPicker\n * @extends {MgtTemplatedTaskComponent}\n *\n * @fires {CustomEvent<IDynamicPerson[]>} selectionChanged - Fired when set of selected people changes\n *\n * @cssprop --people-picker-selected-option-background-color - {Color} the background color of the selected person.\n * @cssprop --people-picker-selected-option-highlight-background-color - {Color} the background color of the selected person when you select it for copy/cut.\n * @cssprop --people-picker-dropdown-background-color - {Color} the background color of the dropdown card.\n * @cssprop --people-picker-dropdown-result-background-color - {Color} the background color of the dropdown result.\n * @cssprop --people-picker-dropdown-result-hover-background-color - {Color} the background color of the dropdown result on hover.\n * @cssprop --people-picker-dropdown-result-focus-background-color - {Color} the background color of the dropdown result on focus.\n * @cssprop --people-picker-no-results-text-color - {Color} the no results found text color.\n * @cssprop --people-picker-input-background - {Color} the input background color.\n * @cssprop --people-picker-input-border-color - {Color} the input border color.\n * @cssprop --people-picker-input-hover-background - {Color} the input background color when you hover.\n * @cssprop --people-picker-input-hover-border-color - {Color} the input border color when you hover\n * @cssprop --people-picker-input-focus-background - {Color} the input background color when you focus.\n * @cssprop --people-picker-input-focus-border-color - {Color} the input border color when you focus.\n * @cssprop --people-picker-input-placeholder-focus-text-color - {Color} the placeholder text color when you focus.\n * @cssprop --people-picker-input-placeholder-hover-text-color - {Color} the placeholder text color when you hover.\n * @cssprop --people-picker-input-placeholder-text-color - {Color} the placeholder text color.\n * @cssprop --people-picker-search-icon-color - {Color} the search icon color\n * @cssprop --people-picker-remove-selected-close-icon-color - {Color} the remove selected person close icon color.\n * @cssprop --people-picker-result-person-avatar-size - {Length} the avatar size of the person in the result. Default is 40px.\n * @cssprop --people-picker-selected-person-avatar-size - {Length} the avatar size of the selected person. Default is 24px.\n * @cssprop --people-picker-font-size - {Length} the font size of the text in the people picker input. Default is 14px.\n */\nexport class MgtPeoplePicker extends MgtTemplatedTaskComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * The strings to be used for localizing the component.\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtPeoplePicker\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Gets the flyout element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtLogin\n   */\n  protected get flyout(): MgtFlyout {\n    return this.renderRoot.querySelector('.flyout');\n  }\n\n  /**\n   * Gets the input element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtLogin\n   */\n  protected get input(): HTMLInputElement {\n    return this.renderRoot.querySelector('fluent-text-field');\n  }\n\n  /**\n   * value determining if search is filtered to a group.\n   *\n   * @type {string}\n   */\n  @property({ attribute: 'group-id', converter: value => value.trim() })\n  public groupId: string;\n\n  /**\n   * array of groups for search to be filtered by.\n   *\n   * @type {string[]}\n   */\n  @property({\n    attribute: 'group-ids',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public groupIds: string[] = [];\n  /**\n   * Value determining if search is filtered to a group.\n   * Valid options are 'any', 'person', 'group'\n   *\n   * @type {PersonType}\n   */\n  @property({\n    attribute: 'type',\n    converter: value => personTypeConverter(value, 'any')\n  })\n  public type: PersonType = 'any';\n\n  /**\n   * Type of groups to search for - requires personType to be set to \"Group\" or \"All\"\n   * Valid values are 'any', 'unified', 'security', 'mailenabledsecurity', 'distribution'\n   * Default is ['any'].\n   *\n   * @type {GroupType}\n   */\n  @property({\n    attribute: 'group-type',\n    converter: value => {\n      const defaultResult: GroupType[] = ['any'];\n      if (!value || value.length === 0) {\n        return defaultResult;\n      }\n\n      const values = value.split(',');\n      const groupTypes: GroupType[] = [];\n\n      for (let v of values) {\n        v = v.trim();\n        if (isGroupType(v)) {\n          groupTypes.push(groupTypeConverter(v));\n        }\n      }\n\n      if (groupTypes.length === 0) {\n        return defaultResult;\n      }\n\n      return groupTypes;\n    }\n  })\n  public groupType: GroupType[] = ['any'];\n\n  /**\n   * The type of user to search for.\n   * Valid options are 'any', 'user', 'contact'\n   * Default is any.\n   *\n   * @type {UserType}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'user-type',\n    converter: value => userTypeConverter(value)\n  })\n  public userType: UserType = 'any';\n\n  /**\n   * whether the return should contain a flat list of all nested members\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'transitive-search',\n    type: Boolean\n  })\n  public transitiveSearch = false;\n\n  /**\n   * containing object of IDynamicPerson.\n   *\n   * @type {IDynamicPerson[]}\n   */\n  @property({\n    attribute: 'people',\n    type: Object\n  })\n  public people: IDynamicPerson[] | null = null;\n\n  /**\n   * determining how many people to show in list.\n   *\n   * @type {number}\n   */\n  @property({\n    attribute: 'show-max',\n    type: Number\n  })\n  public showMax = 6;\n\n  /**\n   * Sets whether the person image should be fetched\n   * from the Microsoft Graph\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'disable-images',\n    type: Boolean\n  })\n  public disableImages = false;\n\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * Sets how the person-card is invoked\n   * Set to PersonCardInteraction.none to not show the card\n   *\n   * @type {PersonCardInteraction}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-card',\n    converter: value => personCardConverter(value)\n  })\n  public personCardInteraction: PersonCardInteraction = 'none';\n\n  /**\n   * array of user picked people.\n   *\n   * @type {IDynamicPerson[]}\n   */\n  public get selectedPeople(): IDynamicPerson[] {\n    return this._selectedPeople;\n  }\n  @property({\n    attribute: 'selected-people',\n    type: Array\n  })\n  public set selectedPeople(value: IDynamicPerson[]) {\n    if (!value) value = [];\n    if (!arraysAreEqual(this._selectedPeople, value)) {\n      this._selectedPeople = value;\n      this.fireCustomEvent('selectionChanged', this._selectedPeople);\n    }\n  }\n\n  /**\n   * array of people to be selected upon initialization\n   *\n   * @type {string[]}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'default-selected-user-ids',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public defaultSelectedUserIds: string[] = [];\n\n  /**\n   * array of groups to be selected upon initialization\n   *\n   * @type {string[]}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'default-selected-group-ids',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public defaultSelectedGroupIds: string[] = [];\n\n  /**\n   * Placeholder text.\n   *\n   * @type {string}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'placeholder',\n    type: String\n  })\n  public placeholder: string;\n\n  /**\n   * Determines whether component should be disabled or not\n   *\n   * @type {boolean}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'disabled',\n    type: Boolean\n  })\n  public disabled = false;\n\n  /**\n   * Determines if a user can enter an email without selecting a person\n   *\n   * @type {boolean}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'allow-any-email',\n    type: Boolean\n  })\n  public allowAnyEmail = false;\n\n  /**\n   * Determines whether component allows multiple or single selection of people\n   *\n   * @type {string}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'selection-mode',\n    type: String\n  })\n  public selectionMode: string;\n\n  /**\n   * Array of the only users to be searched.\n   *\n   * @type {string[]}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'user-ids',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public userIds: string[] = [];\n\n  /**\n   * Filters that can be set on the user properties query.\n   */\n  @property({ attribute: 'user-filters' })\n  public userFilters: string;\n\n  /**\n   * Filters that can be set on the people query properties.\n   */\n  @property({ attribute: 'people-filters' })\n  public peopleFilters: string;\n\n  /**\n   * Filters that can be set on the group query properties.\n   */\n  @property({ attribute: 'group-filters' })\n  public groupFilters: string;\n\n  /**\n   * Label that can be set on the people picker input to provide context to\n   * assistive technologies\n   */\n  @property({\n    attribute: 'aria-label',\n    type: String\n  })\n  public ariaLabel: string;\n\n  /**\n   * Sets whether the people suggestions should apper on the suggestion list\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'disable-suggestions',\n    type: Boolean\n  })\n  public disableSuggestions = false;\n\n  /**\n   * Get the scopes required for people picker\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPeoplePicker\n   */\n  public static get requiredScopes(): string[] {\n    return [\n      ...new Set([\n        'user.read.all',\n        'people.read',\n        'group.read.all',\n        'user.readbasic.all',\n        'contacts.read',\n        ...MgtPerson.requiredScopes\n      ])\n    ];\n  }\n\n  /**\n   * User input in search.\n   *\n   * @protected\n   * @type {string}\n   * @memberof MgtPeoplePicker\n   */\n  @state()\n  protected userInput = '';\n\n  private _selectedPeople: IDynamicPerson[] = [];\n\n  private defaultPeople: IDynamicPerson[];\n\n  // tracking of user arrow key input for selection\n  @state() private _arrowSelectionCount = -1;\n  // List of people requested if group property is provided\n  private _groupPeople: IDynamicPerson[];\n  private _debouncedSearch: { (): void; (): void };\n  private defaultSelectedUsers: IDynamicPerson[] = [];\n  private defaultSelectedGroups: IDynamicPerson[] = [];\n  // List of users highlighted for copy/cut-pasting\n  @state() private _highlightedUsers: Element[] = [];\n  // current user index to the left of the highlighted users\n  private _currentHighlightedUserPos = 0;\n\n  /**\n   * Checks if the input is focused.\n   */\n  @state() private _isFocused = false;\n\n  /**\n   * Switch to determine if a typed email can be set.\n   */\n  @state() private _setAnyEmail = false;\n\n  /**\n   * List of people found from the graph calls.\n   */\n  @state() private _foundPeople: IDynamicPerson[];\n\n  constructor() {\n    super();\n\n    this.addEventListener('copy', this.handleCopy);\n    this.addEventListener('cut', this.handleCut);\n    this.addEventListener('paste', this.handlePaste);\n    this.addEventListener('selectionChanged', this.handleSelectionChanged);\n  }\n\n  /**\n   * Disable the inner input of the fluent-text-field.\n   */\n  private disableTextInput() {\n    const inputControl = this.input.shadowRoot.querySelector<HTMLInputElement>('input');\n    if (inputControl) {\n      inputControl.setAttribute('disabled', 'true');\n      inputControl.value = '';\n    }\n  }\n\n  /**\n   * Enable the inner input of the fluent-text-field.\n   */\n  private enableTextInput() {\n    const inputControl = this.input.shadowRoot.querySelector<HTMLInputElement>('input');\n    if (inputControl) {\n      inputControl.removeAttribute('disabled');\n      inputControl.focus();\n    }\n  }\n\n  /**\n   * Clears the disabled property on the people picker when used in single mode.\n   */\n  private readonly handleSelectionChanged = () => {\n    if (this.selectedPeople.length === 0 && !this.disabled) {\n      this.enableTextInput();\n    }\n  };\n\n  private get hasMaxSelections(): boolean {\n    return this.selectionMode === 'single' && this.selectedPeople.length >= 1;\n  }\n\n  /**\n   * Focuses the input element when focus is called\n   *\n   * @param {FocusOptions} [options]\n   * @memberof MgtPeoplePicker\n   */\n  public focus(options?: FocusOptions) {\n    if (!this.input) {\n      return;\n    }\n    this.input.focus(options);\n    this.input.select();\n  }\n\n  /**\n   * Queries the microsoft graph for a user based on the user id and adds them to the selectedPeople array\n   *\n   * @param {readonly string []} an array of user ids to add to selectedPeople\n   * @returns {Promise<void>}\n   * @memberof MgtPeoplePicker\n   */\n  public async selectUsersById(userIds: readonly string[]): Promise<void> {\n    const provider = Providers.globalProvider;\n    const graph = Providers.globalProvider.graph;\n    if (provider && provider.state === ProviderState.SignedIn) {\n      // eslint-disable-next-line guard-for-in, @typescript-eslint/no-for-in-array\n      for (const id in userIds) {\n        const userId = userIds[id];\n        try {\n          const personDetails = await getUser(graph, userId, defaultPersonProperties);\n          this.addPerson(personDetails);\n        } catch (e: unknown) {\n          // This caters for allow-any-email property if it's enabled on the component\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n          if (isGraphError(e) && e.message?.includes('does not exist') && this.allowAnyEmail) {\n            if (isValidEmail(userId)) {\n              const anyMailUser = {\n                mail: userId,\n                displayName: userId\n              };\n              this.addPerson(anyMailUser);\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Queries the microsoft graph for a group of users from a group id, and adds them to the selectedPeople\n   *\n   * @param {readonly string []} an array of group ids to add to selectedPeople\n   * @returns {Promise<void>}\n   * @memberof MgtPeoplePicker\n   */\n  public async selectGroupsById(groupIds: readonly string[]): Promise<void> {\n    const provider = Providers.globalProvider;\n    const graph = Providers.globalProvider.graph;\n    if (provider && provider.state === ProviderState.SignedIn) {\n      // eslint-disable-next-line guard-for-in, @typescript-eslint/no-for-in-array\n      for (const id in groupIds) {\n        try {\n          const groupDetails = await getGroup(graph, groupIds[id]);\n          this.addPerson(groupDetails);\n        } catch (e) {\n          // no-op\n        }\n      }\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return a lit-html TemplateResult.\n   * Setting properties inside this method will not trigger the element to update.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  public render(): TemplateResult {\n    const defaultTemplate = this.renderTemplate('default', { people: this._foundPeople });\n    if (defaultTemplate) {\n      return defaultTemplate;\n    }\n\n    const selectedPeopleTemplate = this.renderSelectedPeople(this.selectedPeople);\n\n    if (this.selectionMode === 'single' && this.selectedPeople.length === 1) {\n      return selectedPeopleTemplate;\n    } else {\n      const inputTemplate = this.renderInput(selectedPeopleTemplate);\n      const flyoutTemplate = this.renderFlyout(inputTemplate);\n\n      return html`\n      <div>\n        ${flyoutTemplate}\n      </div>\n    `;\n    }\n  }\n\n  protected args(): unknown[] {\n    return [\n      this.providerState,\n      this.groupId,\n      this.groupIds,\n      this.type,\n      this.groupType,\n      this.userType,\n      this.transitiveSearch,\n      this.people,\n      this.showMax,\n      this.defaultSelectedUserIds,\n      this.defaultSelectedGroupIds,\n      this.userIds,\n      this.userFilters,\n      this.peopleFilters,\n      this.groupFilters\n    ];\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtPeoplePicker\n   */\n  protected clearState(): void {\n    this.selectedPeople = [];\n    this.userInput = '';\n    this._highlightedUsers = [];\n    this._currentHighlightedUserPos = 0;\n  }\n\n  /**\n   * Render the input text box.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderInput(selectedPeopleTemplate: TemplateResult): TemplateResult {\n    const placeholder = this.disabled ? '' : this.placeholder || this.strings.inputPlaceholderText;\n    const maxSelectionsAriaLabel = this.hasMaxSelections ? this.strings.maxSelectionsAriaLabel : '';\n\n    const searchIcon = html`<span class=\"search-icon\">${getSvg(SvgIcon.Search)}</span>`;\n    const startSlot = this.selectedPeople?.length > 0 ? selectedPeopleTemplate : searchIcon;\n    return html`\n      <fluent-text-field\n        autocomplete=\"off\"\n        appearance=\"outline\"\n        slot=\"anchor\"\n        id=\"people-picker-input\"\n        role=\"combobox\"\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n        placeholder=${this.hasMaxSelections ? this.strings.maxSelectionsPlaceHolder : placeholder}\n        aria-label=${this.ariaLabel || maxSelectionsAriaLabel || placeholder || this.strings.selectContact}\n        aria-expanded=${this.flyout?.isOpen ?? false}\n        @click=\"${this.hasMaxSelections ? undefined : this.handleInputClick}\"\n        @focus=\"${this.hasMaxSelections ? undefined : this.gainedFocus}\"\n        @keydown=\"${this.hasMaxSelections ? undefined : this.onUserKeyDown}\"\n        @input=\"${this.hasMaxSelections ? undefined : this.onUserInput}\"\n        @blur=\"${this.lostFocus}\"\n        ?disabled=${this.disabled}\n      >\n        <span slot=\"start\">${startSlot}</span>\n      </fluent-text-field>\n    `;\n  }\n\n  /**\n   * Render the selected people tokens.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderSelectedPeople(selectedPeople?: IDynamicPerson[]): TemplateResult {\n    if (!selectedPeople?.length) {\n      return html``;\n    }\n\n    return html`\n       <ul\n        id=\"selected-list\"\n        aria-label=\"${this.strings.selected}\"\n        class=\"selected-list\">\n          ${repeat(\n            selectedPeople,\n            person => person?.id,\n            person => html`\n            <li class=\"selected-list-item\">\n              ${\n                this.renderTemplate(\n                  'selected-person',\n                  { person },\n                  `selected-${person?.id ? person.id : person.displayName}`\n                ) || this.renderSelectedPerson(person)\n              }\n\n              <div\n                role=\"button\"\n                tabindex=\"0\"\n                class=\"selected-list-item-close-icon\"\n                aria-label=\"${this.strings.removeSelectedUser}${person?.displayName ?? ''}\"\n                @click=\"${(e: UIEvent) => this.removePerson(person, e)}\"\n                @keydown=\"${(e: KeyboardEvent) => this.handleRemovePersonKeyDown(person, e)}\">\n                  ${getSvg(SvgIcon.Close)}\n              </div>\n          </li>`\n          )}\n      </ul>`;\n  }\n  /**\n   * Render the flyout chrome.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderFlyout(anchor: TemplateResult): TemplateResult {\n    return mgtHtml`\n       <mgt-flyout light-dismiss class=\"flyout\">\n         ${anchor}\n         <fluent-card\n          tabindex=\"0\"\n          slot=\"flyout\"\n          class=\"flyout-root\"\n          @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n          @keydown=${(e: KeyboardEvent) => this.onUserKeyDown(e)}\n          class=\"custom\">\n           ${this.renderFlyoutContent()}\n         </fluent-card>\n       </mgt-flyout>\n     `;\n  }\n\n  /**\n   * Render the appropriate state in the results flyout.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderFlyoutContent(): TemplateResult {\n    if (this._task.status === TaskStatus.PENDING) {\n      return this.renderLoading();\n    }\n\n    const people = this._foundPeople;\n\n    if (!people || people.length === 0 || this.showMax === 0) {\n      return this.renderNoData();\n    } else {\n      return this.renderSearchResults(people);\n    }\n  }\n\n  /**\n   * Render the loading state.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPeoplePicker\n   */\n  protected renderLoading = (): TemplateResult => {\n    return (\n      this.renderTemplate('loading', null) ||\n      mgtHtml`\n         <div class=\"message-parent\">\n           <mgt-spinner></mgt-spinner>\n           <div aria-label=\"${this.strings.loadingMessage}\" aria-live=\"polite\" role=\"alert\" class=\"loading-text\">\n             ${this.strings.loadingMessage}\n           </div>\n         </div>\n       `\n    );\n  };\n\n  /**\n   * Render the state when no results are found for the search query.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderNoData(): TemplateResult {\n    if (!this._isFocused) {\n      return;\n    }\n    return (\n      this.renderTemplate('error', null) ||\n      this.renderTemplate('no-data', null) ||\n      html`\n         <div class=\"message-parent\">\n           <div aria-label=${this.strings.noResultsFound} aria-live=\"polite\" role=\"alert\" class=\"search-error-text\">\n             ${this.strings.noResultsFound}\n           </div>\n         </div>\n       `\n    );\n  }\n\n  /**\n   * Render the list of search results.\n   *\n   * @protected\n   * @param {IDynamicPerson[]} people\n   * @returns\n   * @memberof MgtPeoplePicker\n   */\n  protected renderSearchResults(people: IDynamicPerson[]) {\n    const filteredPeople = people.filter(person => person.id);\n    return html`\n      <ul\n        id=\"suggestions-list\"\n        class=\"searched-people-list\"\n        role=\"listbox\"\n        aria-live=\"polite\"\n        aria-label=\"${this.strings.suggestionsTitle}\"\n        title=${this.strings.suggestionsTitle}\n      >\n        ${repeat(\n          filteredPeople,\n          person => person.id,\n          person => html`\n          <li\n            id=\"${person.id}\"\n            class=\"searched-people-list-result\"\n            role=\"option\"\n            @click=\"${() => this.handleSuggestionClick(person)}\">\n              ${this.renderPersonResult(person)}\n          </li>\n        `\n        )}\n      </ul>\n     `;\n  }\n\n  /**\n   * Render an individual person search result.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderPersonResult(person: IDynamicPerson): TemplateResult {\n    return (\n      this.renderTemplate('person', { person }, person.id) ||\n      mgtHtml`\n         <mgt-person\n          class=\"person-image-result\"\n          ?show-presence=${this.showPresence}\n          view=\"twolines\"\n          line2-property=\"jobTitle,mail\"\n          .personDetails=${person}\n          ?fetch-image=${!this.disableImages}\n          person-card=\"none\"\n        ></mgt-person>`\n    );\n  }\n\n  /**\n   * Render an individual selected person token.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderSelectedPerson(person: IDynamicPerson): TemplateResult {\n    return mgtHtml`\n       <mgt-person\n         class=\"person-image-selected\"\n         .personDetails=${person}\n         ?fetch-image=${!this.disableImages}\n         view=\"oneline\"\n         person-card=${this.personCardInteraction}\n        ></mgt-person>\n     `;\n  }\n\n  /**\n   * Async query to Graph for members of group if determined by developer.\n   * set's `this.groupPeople` to those members.\n   */\n  protected async loadState(): Promise<void> {\n    this._groupPeople = null;\n    this._foundPeople = null;\n    this.defaultPeople = null;\n    let people = this.people;\n    const input = this.userInput.toLowerCase();\n    const provider = Providers.globalProvider;\n\n    if (people?.length) {\n      if (input) {\n        const displayNameMatch = people.filter(person => person?.displayName.toLowerCase().includes(input));\n        people = displayNameMatch;\n      }\n    } else if (!people && provider && provider.state === ProviderState.SignedIn) {\n      const graph = provider.graph.forComponent(this);\n\n      if (!input.length) {\n        if (\n          (this.defaultSelectedUserIds.length > 0 || this.defaultSelectedGroupIds.length > 0) &&\n          !this.selectedPeople.length &&\n          !this.defaultSelectedUsers.length &&\n          !this.defaultSelectedGroups.length\n        ) {\n          this.defaultSelectedUsers = await getUsersForUserIds(\n            graph,\n            this.defaultSelectedUserIds,\n            '',\n            this.userFilters\n          );\n          this.defaultSelectedGroups = await getGroupsForGroupIds(\n            graph,\n            this.defaultSelectedGroupIds,\n            this.peopleFilters\n          );\n\n          this.defaultSelectedGroups = this.defaultSelectedGroups.filter(group => {\n            return group !== null;\n          });\n\n          this.defaultSelectedUsers = this.defaultSelectedUsers.filter(user => {\n            return user !== null;\n          });\n\n          this.selectedPeople = [...this.defaultSelectedUsers, ...this.defaultSelectedGroups];\n\n          if (this.hasMaxSelections) {\n            this.disableTextInput();\n          }\n          this.requestUpdate();\n        }\n        if (this.disableSuggestions) {\n          this._foundPeople = [];\n          return;\n        }\n        if (this.defaultPeople) {\n          people = this.defaultPeople;\n        } else {\n          if (this.groupId || this.groupIds.length) {\n            if (this._groupPeople === null) {\n              if (this.groupId) {\n                try {\n                  if (this.type === 'group') {\n                    this._groupPeople = await findGroupMembers(\n                      graph,\n                      null,\n                      this.groupId,\n                      this.showMax,\n                      this.type,\n                      this.transitiveSearch\n                    );\n                  } else {\n                    this._groupPeople = await findGroupMembers(\n                      graph,\n                      null,\n                      this.groupId,\n                      this.showMax,\n                      this.type,\n                      this.transitiveSearch,\n                      this.userFilters,\n                      this.peopleFilters\n                    );\n                  }\n                } catch (_) {\n                  this._groupPeople = [];\n                }\n              } else {\n                if (this.type === 'group') {\n                  try {\n                    this._groupPeople = await getGroupsForGroupIds(graph, this.groupIds, this.groupFilters);\n                  } catch (_) {\n                    this._groupPeople = [];\n                  }\n                } else {\n                  try {\n                    const peopleInGroups = await findUsersFromGroupIds(\n                      graph,\n                      '',\n                      this.groupIds,\n                      this.showMax,\n                      this.type,\n                      this.transitiveSearch,\n                      this.userFilters\n                    );\n                    this._groupPeople = peopleInGroups;\n                  } catch (_) {\n                    this._groupPeople = [];\n                  }\n                }\n              }\n            }\n            people = this._groupPeople || [];\n          } else if (this.type === 'person' || this.type === 'any') {\n            if (this.userIds.length) {\n              people = await getUsersForUserIds(graph, this.userIds, '', this.userFilters);\n            } else {\n              const isUserOrContactType = this.userType === 'user' || this.userType === 'contact';\n              if (this.userFilters && isUserOrContactType) {\n                people = await getUsers(graph, this.userFilters, this.showMax);\n              } else {\n                people = await getPeople(graph, this.userType, this.peopleFilters, this.showMax);\n              }\n            }\n          } else if (this.type === 'group') {\n            let groups = (await findGroups(graph, '', this.showMax, this.groupType, this.groupFilters)) || [];\n            // eslint-disable-next-line @typescript-eslint/dot-notation\n            if (groups.length > 0 && groups[0]['value']) {\n              // eslint-disable-next-line @typescript-eslint/dot-notation, @typescript-eslint/no-unsafe-assignment\n              groups = groups[0]['value'];\n            }\n            people = groups;\n          }\n          this.defaultPeople = people;\n        }\n      }\n\n      if (input) {\n        people = [];\n\n        if (this.groupId) {\n          people =\n            (await findGroupMembers(\n              graph,\n              input,\n              this.groupId,\n              this.showMax,\n              this.type,\n              this.transitiveSearch,\n              this.userFilters,\n              this.peopleFilters\n            )) || [];\n        } else {\n          if (this.type === 'person' || this.type === 'any') {\n            try {\n              // Default UserType === any\n              if (this.userType === 'contact' || this.userType === 'user') {\n                // we might have a user-filters property set, search for users with it.\n                if (this.userIds?.length) {\n                  // has the user-ids property set\n                  people = await getUsersForUserIds(graph, this.userIds, input, this.userFilters);\n                } else {\n                  people = await findUsers(graph, input, this.showMax, this.userFilters);\n                }\n              } else {\n                if (!this.groupIds.length) {\n                  if (this.userIds?.length) {\n                    // has the user-ids property set\n                    people = await getUsersForUserIds(graph, this.userIds, input, this.userFilters);\n                  } else {\n                    people = (await findPeople(graph, input, this.showMax, this.userType, this.peopleFilters)) || [];\n                  }\n                } else {\n                  // Does not work when the PersonType = person.\n                  try {\n                    people = await findUsersFromGroupIds(\n                      graph,\n                      input,\n                      this.groupIds,\n                      this.showMax,\n                      this.type,\n                      this.transitiveSearch,\n                      this.userFilters\n                    );\n                  } catch (_) {\n                    // nop\n                  }\n                }\n              }\n            } catch (e) {\n              // nop\n            }\n\n            // Don't follow this path if a people-filters attribute is set on the component as the\n            // default type === PersonType.person\n            if (people && people.length < this.showMax && this.userType !== 'contact' && this.type !== 'person') {\n              try {\n                const users = (await findUsers(graph, input, this.showMax, this.userFilters)) || [];\n\n                // make sure only unique people\n                const peopleIds = new Set(people.map(p => p.id));\n                for (const user of users) {\n                  if (!peopleIds.has(user.id)) {\n                    people.push(user);\n                  }\n                }\n              } catch (e) {\n                // no-op\n              }\n            }\n          }\n\n          if ((this.type === 'group' || this.type === 'any') && people.length < this.showMax) {\n            if (this.groupIds.length) {\n              try {\n                people = await findGroupsFromGroupIds(\n                  graph,\n                  input,\n                  this.groupIds,\n                  this.showMax,\n                  this.groupType,\n                  this.userFilters\n                );\n              } catch (_) {\n                // no-op\n              }\n            } else {\n              let groups = [];\n              try {\n                groups = (await findGroups(graph, input, this.showMax, this.groupType, this.groupFilters)) || [];\n                people = people.concat(groups);\n              } catch (e) {\n                // nop\n              }\n            }\n          }\n        }\n      }\n    }\n    // people = this.getUniquePeople(people);\n    this._foundPeople = this.filterPeople(people);\n  }\n\n  /**\n   * Gets the Groups in a list of group IDs.\n   *\n   * @param graph the graph object\n   * @param people already found groups\n   * @returns groups found\n   */\n  private async getGroupsForGroupIds(graph: IGraph, people: IDynamicPerson[]) {\n    const groups = await getGroupsForGroupIds(graph, this.groupIds, this.groupFilters);\n    for (const group of groups as IDynamicPerson[]) {\n      people = people.concat(group);\n    }\n    people = people.filter(person => person);\n    return people;\n  }\n\n  /**\n   * Hide the results flyout.\n   *\n   * @protected\n   * @memberof MgtPeoplePicker\n   */\n  protected hideFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.close();\n    }\n    if (this.input) {\n      this.input.setAttribute('aria-activedescendant', '');\n    }\n    this._arrowSelectionCount = -1;\n  }\n\n  /**\n   * Show the results flyout.\n   *\n   * @protected\n   * @memberof MgtPeoplePicker\n   */\n  protected showFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.open();\n    }\n    this._arrowSelectionCount = -1;\n  }\n\n  /**\n   * Removes person from selected people\n   *\n   * @param person - person and details pertaining to user selected\n   */\n  protected removePerson(person: IDynamicPerson, e: UIEvent): void {\n    e.stopPropagation();\n    const filteredPersonArr = this.selectedPeople.filter(p => {\n      if (!person.id && p.displayName) {\n        return p.displayName !== person.displayName;\n      }\n      return p.id !== person.id;\n    });\n    this.selectedPeople = filteredPersonArr;\n    void this.loadState();\n  }\n\n  /**\n   * Checks if key pressed is an `Enter` key before removing person\n   *\n   * @param person\n   * @param e\n   */\n  protected handleRemovePersonKeyDown(person: IDynamicPerson, e: KeyboardEvent): void {\n    if (e.key === 'Enter') {\n      this.removePerson(person, e);\n      this.enableTextInput();\n    }\n  }\n\n  /**\n   * Tracks when user selects person from picker\n   *\n   * @param person - contains details pertaining to selected user\n   * @param event - tracks user event\n   */\n  protected addPerson(person: IDynamicPerson): void {\n    if (person) {\n      setTimeout(() => {\n        this.clearInput();\n      }, 50);\n      const duplicatePeople = this.selectedPeople.filter(p => {\n        if (!person.id && p.displayName) {\n          return p.displayName === person.displayName;\n        }\n        return p.id === person.id;\n      });\n\n      if (duplicatePeople.length === 0) {\n        this.selectedPeople = [...this.selectedPeople, person];\n        void this.loadState();\n        this._foundPeople = [];\n        this._arrowSelectionCount = -1;\n      }\n      if (this._isFocused) {\n        this.enableTextInput();\n      }\n    }\n  }\n\n  private clearInput() {\n    this.clearHighlighted();\n    if (this.selectionMode !== 'single') {\n      this.input.value = '';\n    }\n    this.userInput = '';\n  }\n\n  // handle input click\n  private readonly handleInputClick = () => {\n    if (!this.flyout.isOpen) {\n      this.handleUserSearch();\n    }\n  };\n\n  // handle input focus\n  private readonly gainedFocus = () => {\n    this.clearHighlighted();\n    this._isFocused = true;\n    void this.loadState();\n    this.showFlyout();\n  };\n\n  // handle input blur\n  private readonly lostFocus = () => {\n    this._isFocused = false;\n    if (this.input) {\n      this.input.setAttribute('aria-activedescendant', '');\n    }\n\n    const peopleList = this.renderRoot.querySelector('.people-list');\n\n    if (peopleList) {\n      for (const el of peopleList.children) {\n        el.classList.remove('focused');\n        el.setAttribute('aria-selected', 'false');\n      }\n    }\n\n    this.requestUpdate();\n  };\n\n  /**\n   * Handles input from the key up events on the keyboard.\n   */\n  private readonly onUserKeyUp = (event: KeyboardEvent): void => {\n    const keyName = event.key;\n    const isCmdOrCtrlKey = event.getModifierState('Control') || event.getModifierState('Meta');\n    const isPaste = isCmdOrCtrlKey && keyName === 'v';\n    const isArrowKey = ['ArrowDown', 'ArrowRight', 'ArrowUp', 'ArrowLeft'].includes(keyName);\n\n    if ((!isPaste && isCmdOrCtrlKey) || isArrowKey) {\n      if (isCmdOrCtrlKey || ['ArrowLeft', 'ArrowRight'].includes(keyName)) {\n        // Only hide the flyout when you're doing selections with Left/Right Arrow key\n        this.hideFlyout();\n      }\n\n      if (keyName === 'ArrowDown') {\n        if (!this.flyout.isOpen && this._isFocused) {\n          this.handleUserSearch();\n        }\n      }\n      return;\n    }\n\n    if (['Tab', 'Enter', 'Shift'].includes(keyName)) return;\n\n    if (keyName === 'Escape') {\n      this.clearInput();\n      this._foundPeople = [];\n      this._arrowSelectionCount = -1;\n      return;\n    }\n\n    if (keyName === 'Backspace' && this.userInput.length === 0 && this.selectedPeople.length > 0) {\n      this.clearHighlighted();\n      // remove last person in selected list\n      this.selectedPeople = this.selectedPeople.splice(0, this.selectedPeople.length - 1);\n      void this.loadState();\n      this.hideFlyout();\n      return;\n    }\n\n    if ([';', ','].includes(keyName)) {\n      if (this.allowAnyEmail) {\n        this._setAnyEmail = true;\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      return;\n    }\n  };\n\n  private readonly onUserInput = (event: InputEvent) => {\n    const input = event.target as HTMLInputElement;\n    this.userInput = input.value;\n    if (this.userInput) {\n      const validEmail = isValidEmail(this.userInput);\n      if (validEmail && this.allowAnyEmail) {\n        if (this._setAnyEmail) {\n          this.handleAnyEmail();\n        }\n      } else {\n        this.handleUserSearch();\n      }\n      this._setAnyEmail = false;\n    } else {\n      this._foundPeople = [];\n    }\n  };\n\n  private handleAnyEmail() {\n    this._arrowSelectionCount = -1;\n    if (isValidEmail(this.userInput)) {\n      const anyMailUser = {\n        mail: this.userInput,\n        displayName: this.userInput\n      };\n      this.addPerson(anyMailUser);\n    }\n    this.hideFlyout();\n    if (this.input) {\n      this.input.focus();\n      this._isFocused = true;\n    }\n  }\n\n  // handle suggestion list item click\n  private handleSuggestionClick(person: IDynamicPerson): void {\n    this.addPerson(person);\n    if (this.hasMaxSelections) {\n      this.disableTextInput();\n      this.input.value = '';\n    }\n    this.hideFlyout();\n  }\n\n  /**\n   * Tracks event on user input in search\n   *\n   * @param input - input text\n   */\n  private handleUserSearch() {\n    if (!this._debouncedSearch) {\n      this._debouncedSearch = debounce(async () => {\n        await this._task.run();\n        this._arrowSelectionCount = -1;\n        this.showFlyout();\n      }, 400);\n    }\n\n    this._debouncedSearch();\n  }\n\n  /**\n   * Tracks event on user search (keydown)\n   *\n   * @param event - event tracked on user input (keydown)\n   */\n  private readonly onUserKeyDown = (event: KeyboardEvent): void => {\n    event.stopPropagation();\n    const keyName = event.key;\n    const selectedList = this.renderRoot.querySelector('.selected-list');\n    const isCmdOrCtrlKey = event.getModifierState('Control') || event.getModifierState('Meta');\n    if (isCmdOrCtrlKey && selectedList) {\n      const selectedPeople = selectedList.querySelectorAll('mgt-person.person-image-selected');\n      this.hideFlyout();\n      if (isCmdOrCtrlKey && keyName === 'ArrowLeft') {\n        this._currentHighlightedUserPos =\n          (this._currentHighlightedUserPos - 1 + selectedPeople.length) % selectedPeople.length;\n        if (this._currentHighlightedUserPos >= 0 && !Number.isNaN(this._currentHighlightedUserPos)) {\n          this._highlightedUsers.push(selectedPeople[this._currentHighlightedUserPos]);\n        } else {\n          this._currentHighlightedUserPos = 0;\n        }\n      } else if (isCmdOrCtrlKey && keyName === 'ArrowRight') {\n        const person = this._highlightedUsers.pop();\n        if (person) {\n          const personParent = person.parentElement;\n          if (personParent) {\n            this.clearHighlighted(personParent);\n            this._currentHighlightedUserPos++;\n          }\n        }\n      } else if (isCmdOrCtrlKey && keyName === 'a') {\n        this._highlightedUsers = [];\n        selectedPeople.forEach(person => this._highlightedUsers.push(person));\n      }\n      if (this._highlightedUsers) {\n        this.highlightSelectedPeople(this._highlightedUsers);\n      }\n      return;\n    }\n\n    this.clearHighlighted();\n\n    if (!this.flyout.isOpen) {\n      return;\n    }\n\n    if (keyName === 'ArrowUp' || keyName === 'ArrowDown') {\n      this.handleArrowSelection(event);\n      event.preventDefault();\n    }\n\n    if (keyName === 'Enter') {\n      if (!event.shiftKey && this._foundPeople) {\n        event.preventDefault();\n\n        const foundPerson = this._foundPeople[this._arrowSelectionCount];\n        if (foundPerson) {\n          this.addPerson(foundPerson);\n          this.hideFlyout();\n          this.input.value = '';\n          if (this.hasMaxSelections) {\n            this.disableTextInput();\n          }\n          return;\n        }\n      }\n\n      if (this.allowAnyEmail) {\n        this.handleAnyEmail();\n      } else {\n        this.showFlyout();\n      }\n    }\n\n    if ([';', ',', 'Tab'].includes(keyName)) {\n      if (this.allowAnyEmail) {\n        // need to ensure the tab key does tab things\n        if ('Tab' !== keyName) event.preventDefault();\n        this.userInput = this.input.value;\n        this.handleAnyEmail();\n      }\n    }\n    // need to ensure that the tab key hides the flyout even if the input doesn't have an email address\n    if (keyName === 'Tab') {\n      this.hideFlyout();\n    }\n  };\n\n  /**\n   * Gets the text of the highlighed people and writes it to the clipboard\n   */\n  private async writeHighlightedText() {\n    const copyText = [];\n    for (const element of this._highlightedUsers) {\n      // eslint-disable-next-line @typescript-eslint/dot-notation\n      const { id, displayName, mail, userPrincipalName, scoredEmailAddresses } = element['_personDetails'] as Person &\n        User;\n      let emailAddress: string;\n      if (scoredEmailAddresses && scoredEmailAddresses.length > 0) {\n        emailAddress = scoredEmailAddresses.pop().address;\n      } else {\n        emailAddress = userPrincipalName || mail;\n      }\n\n      copyText.push({ id, displayName, email: emailAddress });\n    }\n    let copiedTextStr = '';\n    if (copyText.length > 0) {\n      copiedTextStr = JSON.stringify(copyText);\n    }\n\n    await navigator.clipboard.writeText(copiedTextStr);\n  }\n\n  /**\n   * Handles the cut event when it is fired\n   */\n  private readonly handleCut = () => {\n    this.writeHighlightedText().then(\n      () => {\n        this.removeHighlightedOnCut();\n      },\n      () => {\n        // intentionally left blank\n      }\n    );\n  };\n\n  /**\n   * Handles the copy event when it is fired\n   */\n  private readonly handleCopy = () => {\n    void this.writeHighlightedText();\n  };\n\n  /**\n   * Parses the copied people text and adds them when you paste\n   */\n  private readonly handlePaste = () => {\n    navigator.clipboard.readText().then(\n      copiedText => {\n        if (copiedText) {\n          try {\n            const people: IDynamicPerson[] = JSON.parse(copiedText) as IDynamicPerson[];\n            if (people && people.length > 0) {\n              for (const person of people) {\n                this.addPerson(person);\n              }\n            }\n          } catch (error) {\n            if (error instanceof SyntaxError) {\n              const delimiters = [',', ';'];\n              let listOfUsers: string[];\n              try {\n                for (const delimiter of delimiters) {\n                  listOfUsers = copiedText.split(delimiter);\n                  if (listOfUsers.length > 1) {\n                    this.hideFlyout();\n                    void this.selectUsersById(listOfUsers);\n                    break;\n                  }\n                }\n                // eslint-disable-next-line no-empty\n              } catch (_) {}\n            }\n          }\n        }\n      },\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      error => {\n        // 'navigator.clipboard.readText is not a function' error is thrown in Mozilla\n        // more information here https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText#browser_compatibility\n        // Firefox only supports reading the clipboard in browser extensions,\n        // using the \"clipboardRead\" extension permission.\n      }\n    );\n  };\n\n  /**\n   * Removes only the highlighted elements from the peoplePicker during cut operations.\n   */\n  private removeHighlightedOnCut() {\n    this.selectedPeople = this.selectedPeople.splice(0, this.selectedPeople.length - this._highlightedUsers.length);\n    this._highlightedUsers = [];\n    this._currentHighlightedUserPos = 0;\n    void this.loadState();\n    this.hideFlyout();\n  }\n  /**\n   * Changes the color class to show which people are selected for copy/cut-paste\n   *\n   * @param people list of selected people classes\n   */\n  private highlightSelectedPeople(people: Element[]) {\n    for (const person of people) {\n      const parentElement = person?.parentElement;\n      parentElement.classList.add('highlighted');\n    }\n  }\n\n  /**\n   * Defaults the people class back to the normal view\n   */\n  private clearHighlighted(node?: Element) {\n    if (node) {\n      node.classList.remove('highlighted');\n    } else {\n      for (const person of this._highlightedUsers) {\n        const parentElement = person.parentElement;\n        if (parentElement) {\n          parentElement.classList.remove('highlighted');\n        }\n      }\n      this._highlightedUsers = [];\n      this._currentHighlightedUserPos = 0;\n    }\n  }\n\n  /**\n   * Tracks user key selection for arrow key selection of people\n   *\n   * @param event - tracks user key selection\n   */\n  private handleArrowSelection(event?: KeyboardEvent): void {\n    const peopleList = this.renderRoot.querySelector('.searched-people-list');\n\n    if (peopleList?.children?.length) {\n      if (event) {\n        // update arrow count\n        if (event.key === 'ArrowUp') {\n          if (this._arrowSelectionCount === -1) {\n            this._arrowSelectionCount = 0;\n          } else {\n            this._arrowSelectionCount =\n              (this._arrowSelectionCount - 1 + peopleList.children.length) % peopleList.children.length;\n          }\n        }\n        if (event.key === 'ArrowDown') {\n          if (this._arrowSelectionCount === -1) {\n            this._arrowSelectionCount = 0;\n          } else {\n            this._arrowSelectionCount =\n              (this._arrowSelectionCount + 1 + peopleList.children.length) % peopleList.children.length;\n          }\n        }\n      }\n\n      for (const person of peopleList?.children ?? []) {\n        const p = person as HTMLElement;\n        p.setAttribute('aria-selected', 'false');\n        p.blur();\n        p.removeAttribute('tabindex');\n      }\n\n      // set selected background\n      // set aria-selected to true\n      const focusedItem = peopleList.children[this._arrowSelectionCount] as HTMLElement;\n\n      if (focusedItem) {\n        focusedItem.setAttribute('tabindex', '0');\n        focusedItem.focus();\n        focusedItem.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'nearest' });\n        focusedItem.setAttribute('aria-selected', 'true');\n        this.input.setAttribute('aria-activedescendant', focusedItem?.id);\n      }\n    }\n  }\n\n  /**\n   * Filters people searched from already selected people\n   *\n   * @param people - array of people returned from query to Graph\n   */\n  private filterPeople(people: IDynamicPerson[]): IDynamicPerson[] {\n    // check if people need to be updated\n    // ensuring people list is displayed\n    // find ids from selected people\n    const uniquePeople: IDynamicPerson[] = [];\n    if (people && people.length > 0) {\n      people = people.filter(person => person);\n      const idFilter = this.selectedPeople.map(el => {\n        return el.id ? el.id : el.displayName;\n      });\n\n      // filter id's\n      const filtered = people.filter((person: IDynamicPerson) => {\n        if (person?.id) {\n          return idFilter.indexOf(person.id) === -1;\n        } else {\n          return idFilter.indexOf(person?.displayName) === -1;\n        }\n      });\n\n      // remove duplicates\n      const dupsSet = new Set<string>();\n      for (const d of filtered) {\n        const person = JSON.stringify(d);\n        dupsSet.add(person);\n      }\n\n      dupsSet.forEach((person: string) => {\n        const p: IDynamicPerson = JSON.parse(person) as IDynamicPerson;\n        uniquePeople.push(p);\n      });\n    }\n    return uniquePeople;\n  }\n\n  // stop propagating wheel event to flyout so mouse scrolling works\n  private handleSectionScroll(e: WheelEvent) {\n    const target = this.renderRoot.querySelector('.flyout-root');\n    if (target) {\n      if (\n        !(e.deltaY < 0 && target.scrollTop === 0) &&\n        !(e.deltaY > 0 && target.clientHeight + target.scrollTop >= target.scrollHeight - 1)\n      ) {\n        e.stopPropagation();\n      }\n    }\n  }\n}\n"]}