{"version":3,"file":"graph.files.js","sourceRoot":"src/","sources":["graph/graph.files.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  CacheItem,\n  CacheService,\n  CacheStore,\n  CollectionResponse,\n  GraphPageIterator,\n  IGraph,\n  prepScopes\n} from '@microsoft/mgt-element';\nimport { DriveItem, SharedInsight, Trending, UploadSession, UsedInsight } from '@microsoft/microsoft-graph-types';\nimport { schemas } from './cacheStores';\nimport { GraphRequest, ResponseType } from '@microsoft/microsoft-graph-client';\nimport { blobToBase64 } from '../utils/Utils';\nimport { MgtFileUploadConflictBehavior } from '../components/mgt-file-list/mgt-file-upload/mgt-file-upload';\n\n/**\n * Simple type guard to check if a response is an UploadSession\n *\n * @param session\n * @returns\n */\nexport const isUploadSession = (session: unknown): session is UploadSession => {\n  return Array.isArray((session as UploadSession).nextExpectedRanges);\n};\n\ntype Insight = SharedInsight | UsedInsight | Trending;\n\n/**\n * Object to be stored in cache\n */\ninterface CacheFile extends CacheItem {\n  /**\n   * stringified json representing a file\n   */\n  file?: string;\n}\n\n/**\n * Object to be stored in cache\n */\ninterface CacheFileList extends CacheItem {\n  /**\n   * stringified json representing a list of files\n   */\n  files?: string[];\n  /**\n   * nextLink string to get next page\n   */\n  nextLink?: string;\n}\n\n/**\n * document thumbnail object stored in cache\n */\nexport interface CacheThumbnail extends CacheItem {\n  /**\n   * tag associated with thumbnail\n   */\n  eTag?: string;\n  /**\n   * document thumbnail\n   */\n  thumbnail?: string;\n}\n\n/**\n * Clear Cache of FileList\n */\nexport const clearFilesCache = async (): Promise<void> => {\n  const cache: CacheStore<CacheFileList> = CacheService.getCache<CacheFileList>(\n    schemas.fileLists,\n    schemas.fileLists.stores.fileLists\n  );\n  await cache.clearStore();\n};\n\n/**\n * Defines the time it takes for objects in the cache to expire\n */\nexport const getFileInvalidationTime = (): number =>\n  CacheService.config.files.invalidationPeriod || CacheService.config.defaultInvalidationPeriod;\n\n/**\n * Whether or not the cache is enabled\n */\nexport const getIsFilesCacheEnabled = (): boolean =>\n  CacheService.config.files.isEnabled && CacheService.config.isEnabled;\n\n/**\n * Defines the time it takes for objects in the cache to expire\n */\nexport const getFileListInvalidationTime = (): number =>\n  CacheService.config.fileLists.invalidationPeriod || CacheService.config.defaultInvalidationPeriod;\n\n/**\n * Whether or not the cache is enabled\n */\nexport const getIsFileListsCacheEnabled = (): boolean =>\n  CacheService.config.fileLists.isEnabled && CacheService.config.isEnabled;\n\nconst validDriveItemScopes = [\n  'Files.Read',\n  'Files.ReadWrite',\n  'Files.Read.All',\n  'Files.ReadWrite.All',\n  'Group.Read.All',\n  'Group.ReadWrite.All',\n  'Sites.Read.All',\n  'Sites.ReadWrite.All'\n];\nexport const validInsightScopes = ['Sites.Read.All', 'Sites.ReadWrite.All'];\nconst validFileUploadScopes = ['Files.ReadWrite', 'Files.ReadWrite.All', 'Sites.ReadWrite.All'];\n/**\n * Load a DriveItem give and arbitrary query\n *\n * @param graph\n * @param resource\n * @returns\n */\nexport const getDriveItemByQuery = async (\n  graph: IGraph,\n  resource: string,\n  storeName: string = schemas.files.stores.fileQueries,\n  scopes = validDriveItemScopes\n): Promise<DriveItem> => {\n  // get from cache\n  const cache: CacheStore<CacheFile> = CacheService.getCache<CacheFile>(schemas.files, storeName);\n  const cachedFile = await getFileFromCache(cache, resource);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  let response: DriveItem;\n  try {\n    response = (await graph.api(resource).middlewareOptions(prepScopes(scopes)).get()) as DriveItem;\n\n    if (getIsFilesCacheEnabled()) {\n      await cache.putValue(resource, { file: JSON.stringify(response) });\n    }\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  return response || null;\n};\n\n// GET /drives/{drive-id}/items/{item-id}\nexport const getDriveItemById = async (graph: IGraph, driveId: string, itemId: string): Promise<DriveItem> => {\n  const endpoint = `/drives/${driveId}/items/${itemId}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.driveFiles);\n};\n\n// GET /drives/{drive-id}/root:/{item-path}\nexport const getDriveItemByPath = async (graph: IGraph, driveId: string, itemPath: string): Promise<DriveItem> => {\n  const endpoint = `/drives/${driveId}/root:/${itemPath}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.driveFiles);\n};\n\n// GET /groups/{group-id}/drive/items/{item-id}\nexport const getGroupDriveItemById = async (graph: IGraph, groupId: string, itemId: string): Promise<DriveItem> => {\n  const endpoint = `/groups/${groupId}/drive/items/${itemId}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.groupFiles);\n};\n\n// GET /groups/{group-id}/drive/root:/{item-path}\nexport const getGroupDriveItemByPath = async (graph: IGraph, groupId: string, itemPath: string): Promise<DriveItem> => {\n  const endpoint = `/groups/${groupId}/drive/root:/${itemPath}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.groupFiles);\n};\n\n// GET /me/drive/items/{item-id}\nexport const getMyDriveItemById = async (graph: IGraph, itemId: string): Promise<DriveItem> => {\n  const endpoint = `/me/drive/items/${itemId}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.userFiles);\n};\n\n// GET /me/drive/root:/{item-path}\nexport const getMyDriveItemByPath = async (graph: IGraph, itemPath: string): Promise<DriveItem> => {\n  const endpoint = `/me/drive/root:/${itemPath}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.userFiles);\n};\n\n// GET /sites/{site-id}/drive/items/{item-id}\nexport const getSiteDriveItemById = async (graph: IGraph, siteId: string, itemId: string): Promise<DriveItem> => {\n  const endpoint = `/sites/${siteId}/drive/items/${itemId}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.siteFiles);\n};\n\n// GET /sites/{site-id}/drive/root:/{item-path}\nexport const getSiteDriveItemByPath = async (graph: IGraph, siteId: string, itemPath: string): Promise<DriveItem> => {\n  const endpoint = `/sites/${siteId}/drive/root:/${itemPath}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.siteFiles);\n};\n\n// GET /sites/{site-id}/lists/{list-id}/items/{item-id}/driveItem\nexport const getListDriveItemById = async (\n  graph: IGraph,\n  siteId: string,\n  listId: string,\n  itemId: string\n): Promise<DriveItem> => {\n  const endpoint = `/sites/${siteId}/lists/${listId}/items/${itemId}/driveItem`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.siteFiles);\n};\n\n// GET /users/{user-id}/drive/items/{item-id}\nexport const getUserDriveItemById = async (graph: IGraph, userId: string, itemId: string): Promise<DriveItem> => {\n  const endpoint = `/users/${userId}/drive/items/${itemId}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.userFiles);\n};\n\n// GET /users/{user-id}/drive/root:/{item-path}\nexport const getUserDriveItemByPath = async (graph: IGraph, userId: string, itemPath: string): Promise<DriveItem> => {\n  const endpoint = `/users/${userId}/drive/root:/${itemPath}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.userFiles);\n};\n\n// GET /me/insights/trending/{id}/resource\n// GET /me/insights/used/{id}/resource\n// GET /me/insights/shared/{id}/resource\nexport const getMyInsightsDriveItemById = async (\n  graph: IGraph,\n  insightType: string,\n  id: string\n): Promise<DriveItem> => {\n  const endpoint = `/me/insights/${insightType}/${id}/resource`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.insightFiles, validInsightScopes);\n};\n\n// GET /users/{id or userPrincipalName}/insights/{trending or used or shared}/{id}/resource\nexport const getUserInsightsDriveItemById = async (\n  graph: IGraph,\n  userId: string,\n  insightType: string,\n  id: string\n): Promise<DriveItem> => {\n  const endpoint = `/users/${userId}/insights/${insightType}/${id}/resource`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.insightFiles, validInsightScopes);\n};\n\nconst getIterator = async (\n  graph: IGraph,\n  endpoint: string,\n  storeName: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  let filesPageIterator: GraphPageIterator<DriveItem>;\n\n  // get iterator from cached values\n  const cache: CacheStore<CacheFileList> = CacheService.getCache<CacheFileList>(schemas.fileLists, storeName);\n  const cacheKey = `${endpoint}:${top}`;\n  const fileList = await getFileListFromCache(cache, storeName, cacheKey);\n  if (fileList) {\n    filesPageIterator = getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  let request: GraphRequest;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(validDriveItemScopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      const nextLink = filesPageIterator.nextLink;\n      await cache.putValue(cacheKey, {\n        files: filesPageIterator.value.map(v => JSON.stringify(v)),\n        nextLink\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch {}\n  return filesPageIterator || null;\n};\n\n// GET /me/drive/root/children\nexport const getFilesIterator = async (graph: IGraph, top?: number): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = '/me/drive/root/children';\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /drives/{drive-id}/items/{item-id}/children\nexport const getDriveFilesByIdIterator = async (\n  graph: IGraph,\n  driveId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/drives/${driveId}/items/${itemId}/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /drives/{drive-id}/root:/{item-path}:/children\nexport const getDriveFilesByPathIterator = async (\n  graph: IGraph,\n  driveId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/drives/${driveId}/root:/${itemPath}:/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /groups/{group-id}/drive/items/{item-id}/children\nexport const getGroupFilesByIdIterator = async (\n  graph: IGraph,\n  groupId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/groups/${groupId}/drive/items/${itemId}/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /groups/{group-id}/drive/root:/{item-path}:/children\nexport const getGroupFilesByPathIterator = async (\n  graph: IGraph,\n  groupId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/groups/${groupId}/drive/root:/${itemPath}:/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /me/drive/items/{item-id}/children\nexport const getFilesByIdIterator = async (\n  graph: IGraph,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/me/drive/items/${itemId}/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /me/drive/root:/{item-path}:/children\nexport const getFilesByPathIterator = async (\n  graph: IGraph,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/me/drive/root:/${itemPath}:/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /sites/{site-id}/drive/items/{item-id}/children\nexport const getSiteFilesByIdIterator = async (\n  graph: IGraph,\n  siteId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/sites/${siteId}/drive/items/${itemId}/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /sites/{site-id}/drive/root:/{item-path}:/children\nexport const getSiteFilesByPathIterator = async (\n  graph: IGraph,\n  siteId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/sites/${siteId}/drive/root:/${itemPath}:/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /users/{user-id}/drive/items/{item-id}/children\nexport const getUserFilesByIdIterator = async (\n  graph: IGraph,\n  userId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/users/${userId}/drive/items/${itemId}/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /users/{user-id}/drive/root:/{item-path}:/children\nexport const getUserFilesByPathIterator = async (\n  graph: IGraph,\n  userId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/users/${userId}/drive/root:/${itemPath}:/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\nexport const getFilesByListQueryIterator = async (\n  graph: IGraph,\n  listQuery: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, listQuery, cacheStore, top);\n};\n\n// GET /me/insights/{trending\t| used | shared}\nexport const getMyInsightsFiles = async (graph: IGraph, insightType: string): Promise<DriveItem[]> => {\n  const endpoint = `/me/insights/${insightType}`;\n  const cacheStore = schemas.fileLists.stores.insightfileLists;\n\n  // get files from cached values\n  const cache: CacheStore<CacheFileList> = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    // fileList.files is string[] so JSON.parse to get proper objects\n    return fileList.files.map((file: string) => JSON.parse(file) as DriveItem);\n  }\n\n  // get files from graph request\n  let insightResponse: CollectionResponse<Insight>;\n  try {\n    insightResponse = (await graph\n      .api(endpoint)\n      .filter(\"resourceReference/type eq 'microsoft.graph.driveItem'\")\n      .middlewareOptions(prepScopes(validInsightScopes))\n      .get()) as CollectionResponse<Insight>;\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  const result = await getDriveItemsByInsights(graph, insightResponse, validInsightScopes);\n  if (getIsFileListsCacheEnabled()) {\n    await cache.putValue(endpoint, { files: result.map(file => JSON.stringify(file)) });\n  }\n\n  return result || null;\n};\n\n// GET /users/{id | userPrincipalName}/insights/{trending\t| used | shared}\nexport const getUserInsightsFiles = async (\n  graph: IGraph,\n  userId: string,\n  insightType: string\n): Promise<DriveItem[]> => {\n  let endpoint: string;\n  let filter: string;\n\n  if (insightType === 'shared') {\n    endpoint = '/me/insights/shared';\n    filter = `((lastshared/sharedby/id eq '${userId}') and (resourceReference/type eq 'microsoft.graph.driveItem'))`;\n  } else {\n    endpoint = `/users/${userId}/insights/${insightType}`;\n    filter = \"resourceReference/type eq 'microsoft.graph.driveItem'\";\n  }\n\n  const key = `${endpoint}?$filter=${filter}`;\n\n  // get files from cached values\n  const cacheStore = schemas.fileLists.stores.insightfileLists;\n  const cache: CacheStore<CacheFileList> = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, key);\n  if (fileList) {\n    return fileList.files.map((file: string) => JSON.parse(file) as DriveItem);\n  }\n\n  // get files from graph request\n  let insightResponse: CollectionResponse<Insight>;\n\n  try {\n    insightResponse = (await graph\n      .api(endpoint)\n      .filter(filter)\n      .middlewareOptions(prepScopes(validInsightScopes))\n      .get()) as CollectionResponse<Insight>;\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  const result = await getDriveItemsByInsights(graph, insightResponse, validInsightScopes);\n  if (getIsFileListsCacheEnabled()) {\n    await cache.putValue(endpoint, { files: result.map(file => JSON.stringify(file)) });\n  }\n\n  return result || null;\n};\n\nexport const getFilesByQueries = async (graph: IGraph, fileQueries: string[]): Promise<DriveItem[]> => {\n  if (!fileQueries || fileQueries.length === 0) {\n    return [];\n  }\n\n  const batch = graph.createBatch();\n  const files: DriveItem[] = [];\n  let cache: CacheStore<CacheFile>;\n  let cachedFile: CacheFile;\n  if (getIsFilesCacheEnabled()) {\n    cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.fileQueries);\n  }\n\n  for (const fileQuery of fileQueries) {\n    if (getIsFilesCacheEnabled()) {\n      cachedFile = await cache.getValue(fileQuery); // todo\n    }\n\n    if (getIsFilesCacheEnabled() && cachedFile && getFileInvalidationTime() > Date.now() - cachedFile.timeCached) {\n      files.push(JSON.parse(cachedFile.file) as DriveItem);\n    } else if (fileQuery !== '') {\n      batch.get(fileQuery, fileQuery, validDriveItemScopes);\n    }\n  }\n\n  try {\n    const responses = await batch.executeAll();\n\n    for (const fileQuery of fileQueries) {\n      const response = responses.get(fileQuery);\n      if (response?.content) {\n        files.push(response.content as DriveItem);\n        if (getIsFilesCacheEnabled()) {\n          await cache.putValue(fileQuery, { file: JSON.stringify(response.content) });\n        }\n      }\n    }\n\n    return files;\n  } catch (_) {\n    try {\n      return Promise.all(\n        fileQueries\n          .filter(fileQuery => fileQuery && fileQuery !== '')\n          .map(async fileQuery => {\n            const file = await getDriveItemByQuery(graph, fileQuery);\n            if (file) {\n              if (getIsFilesCacheEnabled()) {\n                await cache.putValue(fileQuery, { file: JSON.stringify(file) });\n              }\n              return file;\n            }\n          })\n      );\n    } catch (e) {\n      return [];\n    }\n  }\n};\n\nconst getDriveItemsByInsights = async (\n  graph: IGraph,\n  insightResponse: CollectionResponse<Insight>,\n  scopes: string[]\n): Promise<DriveItem[]> => {\n  if (!insightResponse) {\n    return [];\n  }\n\n  const insightItems = insightResponse.value;\n  const batch = graph.createBatch();\n  const driveItems: DriveItem[] = [];\n  for (const item of insightItems) {\n    const driveItemId = item.resourceReference.id;\n    if (driveItemId !== '') {\n      batch.get(driveItemId, driveItemId, scopes);\n    }\n  }\n\n  try {\n    const driveItemResponses = await batch.executeAll();\n\n    for (const item of insightItems) {\n      const driveItemResponse = driveItemResponses.get(item.resourceReference.id);\n      if (driveItemResponse?.content) {\n        driveItems.push(driveItemResponse.content as DriveItem);\n      }\n    }\n    return driveItems;\n  } catch (_) {\n    try {\n      // we're filtering the insights calls that feed this to ensure that only\n      // drive items are returned, but we still need to check for nulls\n      return Promise.all(\n        insightItems\n          .filter(insightItem => Boolean(insightItem.resourceReference.id))\n          .map(\n            async insightItem =>\n              (await graph\n                .api(insightItem.resourceReference.id)\n                .middlewareOptions(prepScopes(scopes))\n                .get()) as DriveItem\n          )\n      );\n    } catch (e) {\n      return [];\n    }\n  }\n};\n\nconst getFilesPageIteratorFromRequest = async (graph: IGraph, request: GraphRequest) => {\n  return GraphPageIterator.create<DriveItem>(graph, request);\n};\n\nconst getFilesPageIteratorFromCache = (graph: IGraph, value: string[], nextLink: string) => {\n  return GraphPageIterator.createFromValue<DriveItem>(\n    graph,\n    value.map(v => JSON.parse(v) as DriveItem),\n    nextLink\n  );\n};\n\n/**\n * Load a file from the cache\n *\n * @param {CacheStore<CacheFile>} cache\n * @param {string} key\n * @return {*}\n */\nconst getFileFromCache = async <TResult = DriveItem>(cache: CacheStore<CacheFile>, key: string): Promise<TResult> => {\n  if (getIsFilesCacheEnabled()) {\n    const file = await cache.getValue(key);\n\n    if (file && getFileInvalidationTime() > Date.now() - file.timeCached) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return JSON.parse(file.file) as TResult;\n    }\n  }\n\n  return null;\n};\n\nexport const getFileListFromCache = async (cache: CacheStore<CacheFileList>, store: string, key: string) => {\n  if (!cache) {\n    cache = CacheService.getCache<CacheFileList>(schemas.fileLists, store);\n  }\n\n  if (getIsFileListsCacheEnabled()) {\n    const fileList = await cache.getValue(key);\n\n    if (fileList && getFileListInvalidationTime() > Date.now() - fileList.timeCached) {\n      return fileList;\n    }\n  }\n\n  return null;\n};\n\n// refresh filesPageIterator to its next iteration and save current page to cache\nexport const fetchNextAndCacheForFilesPageIterator = async (filesPageIterator: GraphPageIterator<DriveItem>) => {\n  const nextLink = filesPageIterator.nextLink;\n\n  if (filesPageIterator.hasNext) {\n    await filesPageIterator.next();\n  }\n  if (getIsFileListsCacheEnabled()) {\n    const cache: CacheStore<CacheFileList> = CacheService.getCache<CacheFileList>(\n      schemas.fileLists,\n      schemas.fileLists.stores.fileLists\n    );\n\n    // match only the endpoint (after version number and before OData query params) e.g. /me/drive/root/children\n    const reg = /(graph.microsoft.com\\/(v1.0|beta))(.*?)(?=\\?)/gi;\n    const matches = reg.exec(nextLink);\n    const key = matches[3];\n\n    await cache.putValue(key, { files: filesPageIterator.value.map(v => JSON.stringify(v)), nextLink });\n  }\n};\n\n/**\n * retrieves the specified document thumbnail\n *\n * @param {string} resource\n * @param {string[]} scopes\n * @returns {Promise<string>}\n */\nexport const getDocumentThumbnail = async (\n  graph: IGraph,\n  resource: string,\n  scopes: string[]\n): Promise<CacheThumbnail> => {\n  try {\n    const response = (await graph\n      .api(resource)\n      .responseType(ResponseType.RAW)\n      .middlewareOptions(prepScopes(scopes))\n      .get()) as Response;\n\n    if (response.status === 404) {\n      // 404 means the resource does not have a thumbnail\n      // we still want to cache that state\n      // so we return an object that can be cached\n      return { eTag: null, thumbnail: null };\n    } else if (!response.ok) {\n      return null;\n    }\n\n    const eTag = response.headers.get('eTag');\n    const blob = await blobToBase64(await response.blob());\n    return { eTag, thumbnail: blob };\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * retrieve file properties based on Graph query\n *\n * @param graph\n * @param resource\n * @returns\n */\nexport const getGraphfile = async (graph: IGraph, resource: string): Promise<DriveItem> => {\n  // get from graph request\n  try {\n    const response = (await graph.api(resource).middlewareOptions(prepScopes(validDriveItemScopes)).get()) as DriveItem;\n    return response || null;\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  return null;\n};\n\n/**\n * retrieve UploadSession Url for large file and send by chuncks\n *\n * @param graph\n * @param resource\n * @returns\n */\nexport const getUploadSession = async (\n  graph: IGraph,\n  resource: string,\n  conflictBehavior: MgtFileUploadConflictBehavior\n): Promise<UploadSession> => {\n  try {\n    // get from graph request\n    const sessionOptions = {\n      item: {\n        '@microsoft.graph.conflictBehavior': conflictBehavior ? conflictBehavior : 'rename'\n      }\n    };\n    let response: UploadSession;\n    try {\n      response = (await graph\n        .api(resource)\n        .middlewareOptions(prepScopes(validFileUploadScopes))\n        .post(JSON.stringify(sessionOptions))) as UploadSession;\n      // eslint-disable-next-line no-empty\n    } catch {}\n\n    return response || null;\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * send file chunck to OneDrive, SharePoint Site\n *\n * @param graph\n * @param resource\n * @param file\n * @returns\n */\nexport const sendFileChunk = async (\n  graph: IGraph,\n  resource: string,\n  contentLength: string,\n  contentRange: string,\n  file: Blob\n): Promise<UploadSession | DriveItem> => {\n  try {\n    // get from graph request\n    const header = {\n      'Content-Length': contentLength,\n      'Content-Range': contentRange\n    };\n    let response: UploadSession | DriveItem;\n    try {\n      response = (await graph.client\n        .api(resource)\n        .middlewareOptions(prepScopes(validFileUploadScopes))\n        .headers(header)\n        .put(file)) as UploadSession | DriveItem;\n      // eslint-disable-next-line no-empty\n    } catch {}\n\n    return response || null;\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * send file to OneDrive, SharePoint Site\n *\n * @param graph\n * @param resource\n * @param file\n * @returns\n */\nexport const sendFileContent = async (graph: IGraph, resource: string, file: File): Promise<DriveItem> => {\n  try {\n    // get from graph request\n    let response: DriveItem;\n    try {\n      response = (await graph.client\n        .api(resource)\n        .middlewareOptions(prepScopes(validFileUploadScopes))\n        .put(file)) as DriveItem;\n      // eslint-disable-next-line no-empty\n    } catch {}\n\n    return response || null;\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * delete upload session\n *\n * @param graph\n * @param resource\n * @returns\n */\nexport const deleteSessionFile = async (graph: IGraph, resource: string): Promise<void> => {\n  try {\n    await graph.client.api(resource).middlewareOptions(prepScopes(validFileUploadScopes)).delete();\n  } catch {\n    // TODO: re-examine the error handling here\n    // DELETE returns a 204 on success so void makes sense to return on the happy path\n    // but we should probably throw on error\n    return null;\n  }\n};\n"]}