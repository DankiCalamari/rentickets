{"version":3,"file":"needsAdditionalScopes.js","sourceRoot":"src/","sources":["providers/needsAdditionalScopes.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC;;;;;;GAMG;AAEH,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,WAAqB,EAAE,QAAQ,GAAG,SAAS,CAAC,cAAc,EAAE,EAAE,CAClG,QAAQ,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { Providers } from './Providers';\n\n/**\n * wrapper function check for scopes that need to be consented to.\n * By default uses the current global provider, otherwise uses the supplied IProvider\n *\n * @param {string[]} validScopes the set of scopes of which one is required.\n * @param {IProvider} [provider = Providers.globalProvider] the scope aware provider against which to check for existing consented scopes\n */\n\nexport const needsAdditionalScopes = (validScopes: string[], provider = Providers.globalProvider) =>\n  provider.needsAdditionalScopes(validScopes);\n"]}